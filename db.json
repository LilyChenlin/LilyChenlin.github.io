{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"source/avatar.jpeg","path":"avatar.jpeg","modified":0,"renderable":0},{"_id":"themes/next/source/images/loveImg.svg","path":"images/loveImg.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loveImg-16x16.png","path":"images/loveImg-16x16.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loveImg-32x32.png","path":"images/loveImg-32x32.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/love-click.js","path":"js/love-click.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"e8f2c1ab7f36b893806e1ffe967bcf46751da78a","modified":1642401476845},{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1641910313273},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1641910313273},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1641910313273},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1641910313273},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1641910313273},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1641910313273},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1641910313275},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1641910313275},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1641910313275},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1641910313275},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1641910313273},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1641910313275},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1641910313275},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1641910313275},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1641910313275},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1641910313275},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1641910313276},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1641910313276},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1641910313273},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1641910313276},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1641910313276},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1641910313276},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1641910313276},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1641910313275},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1641910313276},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1641910313276},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1641910313276},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1641910313278},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1641910313278},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1641910313278},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1641910313278},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1641910313278},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1641910313278},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1641910313278},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1641910313279},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1641910313279},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1641910313279},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1641910313277},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1641910313278},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1641910313278},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1641910313276},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1641910313278},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1641910313284},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1641910313284},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1641910313284},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1641910313279},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1641910313283},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1641910313283},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1641910313284},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1641910313284},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1641910313284},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1641910313283},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1641910313283},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1641910313283},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1641910313279},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1641910313279},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1641910313279},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1641910313279},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1641910313280},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1641910313279},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1641910313282},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1641910313282},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1641910313286},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1641910313286},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1641910313285},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1641910313286},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1641910313285},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1641910313285},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1641910313287},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1641910313286},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1641910313286},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1641910313280},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1641910313282},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1641910313286},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1641910313285},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1641910313285},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1641910313282},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1641910313285},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1641910313286},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1641910313285},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1641910313285},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1641910313285},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1641910313282},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1641910313285},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1641910313281},{"_id":"public/2022/01/11/hello-world/index.html","hash":"49c524d2c989e711ba407051b7e8eceb87914961","modified":1641995238837},{"_id":"public/archives/index.html","hash":"1a75de19b75578a105f361c7ba3fc69257f5ea5f","modified":1641995238837},{"_id":"public/archives/2022/01/index.html","hash":"0b6a9e3db13d2da3608cdcc236d5b2ca75a00077","modified":1641995238837},{"_id":"public/archives/2022/index.html","hash":"e21d4401d95e09f8dc4b374f30d2a7d8c9921a18","modified":1641995238837},{"_id":"public/index.html","hash":"33028c195c05c314267840e334713366090ef5f4","modified":1641995238837},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1641910475679},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1641910475679},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1641910475679},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1641910475679},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1641910475679},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1641910475679},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1641910475679},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1641910475679},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1641910475679},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1641910475679},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1641910475679},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1641910475679},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1641910475679},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1641910475679},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1641910475679},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1641910475679},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1641910475679},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1641910475679},{"_id":"public/css/style.css","hash":"5f8dadd37d0052c557061018fe6f568f64fced9b","modified":1641910475679},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1641910475679},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1641910475679},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1641910475679},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1641910475679},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1641950370432},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1641950370432},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1641950370432},{"_id":"themes/next/.gitignore","hash":"56f3470755c20311ddd30d421b377697a6e5e68b","modified":1641950370433},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1641950370434},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1641950370434},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1641950370434},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1641950370434},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1641950370445},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1641950370434},{"_id":"themes/next/_config.yml","hash":"51190d0fa2f89211c466b9881c69fe3c8f2f43d4","modified":1641950943654},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1641950370432},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1641950370433},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1641950370432},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1641950370437},{"_id":"themes/next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1641950370433},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1641950370433},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1641950370433},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1641950370433},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1641950370433},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1641950370433},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1641950370433},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1641950370433},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1641950370435},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1641950370435},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1641950370435},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1641950370435},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1641950370435},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1641950370435},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1641950370447},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1641950370435},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1641950370435},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1641950370435},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1641950370437},{"_id":"themes/next/languages/default.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1641950370437},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1641950370437},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1641950370437},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1641950370438},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1641950370438},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1641950370438},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1641950370438},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1641950370438},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1641950370438},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1641950370438},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1641950370438},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1641950370438},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1641950370438},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1641950370438},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1641950370438},{"_id":"themes/next/languages/tr.yml","hash":"2b041eeb8bd096f549464f191cfc1ea0181daca4","modified":1641950370439},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1641950370439},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1641950370439},{"_id":"themes/next/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1641950370439},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1641950370439},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1641950370439},{"_id":"themes/next/layout/_layout.swig","hash":"3b335ebe667cbc852c4a81828e176b73104f98cb","modified":1642326387144},{"_id":"themes/next/layout/archive.swig","hash":"e9c10c911ab540e4321647112712192a241028c9","modified":1642404479953},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1641950370445},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1641950370445},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1641950370445},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1641950370445},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1641950370432},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1641950370445},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1641950370432},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1641950370432},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1641950370433},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1641950370436},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1641950370436},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1641950370436},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1641950370436},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1641950370436},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1641950370436},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1641950370437},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1641950370436},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1641950370437},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1641950370437},{"_id":"themes/next/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1641950370445},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1641950370446},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1641950370437},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1641950370437},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1641950370446},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1641950370437},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1641950370446},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1641950370446},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1641950370446},{"_id":"themes/next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1641950370446},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1641950370447},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1641950370446},{"_id":"themes/next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1641950370447},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1641950370447},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1641950370447},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1641950370447},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1641950370447},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1641950370447},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1641950370447},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1641950370447},{"_id":"themes/next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1641950370447},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1641950370447},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1641950370447},{"_id":"themes/next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1641950370447},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1641950370454},{"_id":"themes/next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1641950370452},{"_id":"themes/next/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1641950370455},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1641950370456},{"_id":"themes/next/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1641950370455},{"_id":"themes/next/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1641950370455},{"_id":"themes/next/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1641950370455},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1641950370455},{"_id":"themes/next/source/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1641950370456},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1641950370454},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1641950370454},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1641950370454},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1641950370454},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1641950370454},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1641950370454},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1641950370455},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1641950370455},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1641950370455},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1641950370455},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1641950370455},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1641950370455},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1641950370455},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1642404785582},{"_id":"themes/next/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1641950370439},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1642420700314},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1641950370440},{"_id":"themes/next/layout/_partials/footer.swig","hash":"5b959cade07ffc761d06a386f18d04cacd038c3e","modified":1642327321619},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1641950370440},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1641950370441},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1641950370441},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1641950370443},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1641950370443},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1641950370444},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1641950370444},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1641950370442},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1641950370442},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1641950370445},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1641950370445},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1641950370445},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1641950370445},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1641950370446},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1641950370446},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1641950370446},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1641950370442},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1641950370446},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1641950370442},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1641950370442},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1641950370446},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1641950370446},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1641950370446},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1641950370453},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1641950370454},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1641950370454},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1641950370454},{"_id":"themes/next/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1641950370454},{"_id":"themes/next/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1641950370455},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1641950370456},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1641950370440},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1641950370440},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1641950370440},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1641950370440},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1641950370457},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1641950370440},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1641950370440},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1641950370440},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1641950370441},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1641950370441},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1641950370441},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1641950370441},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1641950370457},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1641950370441},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1641950370441},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1641950370441},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1641950370441},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1641950370441},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1641950370441},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1641950370441},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1641950370442},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1641950370442},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1641950370442},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1641950370442},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1641950370443},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1641950370443},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1641950370443},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1641950370443},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1641950370443},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1641950370443},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1641950370443},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1641950370443},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1641950370443},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1641950370443},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1641950370443},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1641950370444},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1641950370444},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1641950370444},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"d4276efe1777e78c1de998f4a45097037062adbd","modified":1642405663197},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1641950370444},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1641950370444},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1641950370444},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1641950370444},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1641950370444},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1641950370444},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1641950370442},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1641950370442},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1641950370442},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1641950370442},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1641950370442},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1641950370448},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1641950370448},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1641950370448},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1641950370449},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1641950370450},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1641950370450},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1641950370451},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1641950370451},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1641950370451},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1641950370451},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1641950370451},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1641950370452},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1641950370452},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1641950370452},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1641950370456},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1641950370456},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1641950370452},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1641950370452},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1641950370452},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1641950370453},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1641950370453},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1641950370453},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1641950370453},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1641950370453},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1641950370453},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1641950370453},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1641950370453},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1641950370453},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1641950370453},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1641950370453},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1641950370453},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1641950370453},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1641950370453},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1641950370453},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1641950370448},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1641950370448},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1641950370448},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1641950370449},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1641950370449},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1641950370449},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1641950370448},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1641950370448},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1641950370449},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1641950370449},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"f42d4fe1b056b557826adf3ef999f09e5d12fd78","modified":1642404749471},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1641950370448},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1641950370448},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1641950370448},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1641950370449},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1641950370449},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1641950370449},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1641950370449},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1641950370449},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1641950370449},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1641950370449},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1641950370449},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1641950370449},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1641950370450},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1641950370450},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1641950370450},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1641950370450},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1641950370450},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1641950370450},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1641950370450},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1641950370450},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1641950370450},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1641950370450},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1641950370450},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1641950370450},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1641950370451},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1641950370451},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1641950370451},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1641950370451},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1641950370451},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1641950370451},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1641950370451},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1641950370451},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1641950370451},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1641950370451},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1641950370452},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1641950370452},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1641950370452},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1641950370452},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1641950370452},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1641950370452},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1641950370452},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1641950370456},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1641950370457},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1641951561733},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1641951561733},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1641951561733},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1641951561733},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1641951561733},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1641951561733},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1641951561733},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1641951561733},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1641951561733},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1641951561733},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1641951561733},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1641951561733},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1641951561733},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1641951561733},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1641951561733},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1641951561733},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1641951561733},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1641951561733},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1641951561733},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1641951561733},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1641951561733},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1641951561733},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1641951561733},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1641951561733},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1641951561733},{"_id":"public/css/main.css","hash":"b3340b99e1c48aa481f6c307605caaaf1cbe82b0","modified":1641951561733},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1641951561733},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1641951561733},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1641951561733},{"_id":"source/avatar.jpeg","hash":"12d660d5e796ea25e71ff6ca4f82b615f113e821","modified":1642257409651},{"_id":"source/tags/index.md","hash":"6a008b482d7978295559061a8c1546a76b9afd43","modified":1642324997651},{"_id":"themes/next/source/images/loveImg.svg","hash":"4c5d1ad887ef5df49a33b1cab5acd596c09f70b9","modified":1642325802965},{"_id":"themes/next/source/images/loveImg-32x32.png","hash":"7f1cc897ee265dbc16612b94a2823d6b31755790","modified":1642325913760},{"_id":"themes/next/source/images/loveImg-16x16.png","hash":"64648636163ebf36844e45a260e6e567e240f3a6","modified":1642325913794},{"_id":"themes/next/source/js/love-click.js","hash":"5cf89f622bf891cf1986845eb92eadef6f358eb7","modified":1642326287525},{"_id":"source/categories/index.md","hash":"2e814ef35d16f3f77b86d12c1fc5a638372872ec","modified":1642406100103},{"_id":"source/_posts/读ucf-scripts脚手架源码.md","hash":"8a59859e78d27b9e9dd50c51a36a7ba9579e5d9a","modified":1642421991955},{"_id":"source/.DS_Store","hash":"b48c4f7d61a5928be717d4bd654481ff1eab36ee","modified":1642409179942},{"_id":"source/_posts/读ucf-scripts脚手架源码/1.png","hash":"f2a534a450dfcd4027e4643cd12f0523c220b1b5","modified":1642409452821},{"_id":"source/_posts/读ucf-scripts脚手架源码/4.png","hash":"db24c294ea940c077c68b04e7c67602b06d4f5a5","modified":1642409466032},{"_id":"source/_posts/读ucf-scripts脚手架源码/3.png","hash":"e5cc75e5f2def67fdc191c6079ee7550d3f089db","modified":1642409462139},{"_id":"source/_posts/读ucf-scripts脚手架源码/2.png","hash":"a3661c2e6568b805faf1681b47557f14b2e3c811","modified":1642409456007}],"Category":[{"name":"Webpack","_id":"ckyinnc3u0002zb1m9ve5d2t6"}],"Data":[],"Page":[{"title":"tags","type":"tags","comments":0,"date":"2022-01-16T09:17:37.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ntype: \"tags\"\ncomments: false\ndate: 2022-01-16 17:17:37\n---\n","updated":"2022-01-16T09:23:17.651Z","path":"tags/index.html","_id":"ckyh1pzbt0000gs1m15x7h0ux","layout":"page","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"categories","date":"2022-01-17T07:53:57.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2022-01-17 15:53:57\ntype: \"categories\"\ncomments: false\n---\n","updated":"2022-01-17T07:55:00.103Z","path":"categories/index.html","_id":"ckyie5dhu0000k01mh3i43wrn","layout":"page","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""}],"Post":[{"title":"读ucf-scripts脚手架源码","date":"2022-01-17T08:42:47.000Z","update":"2022-01-17T08:42:47.000Z","_content":"# 1. 介绍\n\nucf-scripts是bip平台统一的前端工程脚手架。\n\n<!--more-->\n\n\n# 2. 目录\n\n![目录](./读ucf-scripts脚手架源码/1.png)\n\n目录文件说明\n\n1. base.config.js 基础配置文件\n1. start.js 本地起服务入口文件\n1. build.js 打包服务入口文件\n1. start.config.js 本地起服务配置文件\n1. build.config.js 打包配置文件\n1. utils.js 工具方法\n\n# 3. Plugins插件\n\n## 3.1 start.config.js\n\n### 3.1.1. open-browser-plugin\n\n项目启动后自动打开浏览器\n\n### 3.1.2. html-webpack-plugin\n\nhtml-webpack-plugin 为应用程序生成一个 HTML 文件，并自动将生成的所有 bundle 注入到此文件中。\n\n#### 使用\n\n![htmlWebpackPlugin配置](./读ucf-scripts脚手架源码/2.png)\n\n- 说明\n  1. filename 生成的模版文件的名字\n  2. template 模版来源文件\n  3. inject 引入模板的注入位置，取值有true/false/body/head \n     - true：默认值，script标签位于html文件的body底部\n     - body:script标签位于html文件的body底部\n     - head:script标签位于html文件的head中\n     - false:不插入生成的js文件，这个几乎不会用到\n  4. chunks 引入的模块，这里指定的是entry中设置多个js时，在这里指定引入的js，如果不设置则默认全部引入\n  5. hash \n     - true 打包生成的html文件引入的js/css带有hash值\n  6. static_url\n- 困惑解析使用require.resolve函数来查询某个模块文件的带有完整绝对路径的文件名\n  1. require.resolve(url)\n\n### 3.1.3. HotModuleReplacementPlugin\n\n热更新模块\n\n```javascript\n    plugins: [\n        new webpack.HotModuleReplacementPlugin(),\n        ...HtmlPlugin\n    ]\n```\n\n### 3.1.4. DefinePlugin\n\n允许在 **编译时** 将你代码中的变量替换为其他值或表达式\n\n```javascript\n//环境变量注入\ncfg.global_env && (config.plugins = config.plugins.concat(new webpack.DefinePlugin(cfg.global_env)));\n```\n\n### 3.1.5. @tinper/next-plugin\n\n统一前端三方包接入Plugin\n\n## 3.2. base.config.js\n\n### 3.2.1. BannerPlugin\n\nwebpack内置Plugin，在打包好的js文件最开始处添加版权声明。\n\n```javascript\n    plugins: [\n        new webpack.BannerPlugin({\n            banner: `File:[file] Date:${new Date()}`\n        })\n    ]\n```\n\n### 3.2.2. mini-css-extract-plugin\n\n原本的状态是css-in-js，使用该插件后可以将css单独打包成一个文件。\n\n```javascript\nplugins: [\n        new MiniCssExtractPlugin({\n            filename: '[name].css',\n            chunkFilename: '[name].css',\n            ignoreOrder: true\n        }),\n]\n```\n\n### 3.2.3. ProgressPlugin\n\nwebpack构建进度条。\n\n```javascript\nnew webpack.ProgressPlugin()\n```\n\n## 3.3 build.config.js\n\n### 3.3.1. CleanWebpackPlugin\n\n删除指定目录下的文件。在项目中主要用来在每一次编译前，先删除上一次编译完后的代码。\n\n### 3.3.2. OptimizeCSSAssetsPlugin\n\n压缩css代码\n\n### 3.3.3. TerserWebpackPlugin\n\n1. webpack5已内置该插件，但webpack v4并没有内置。\n1. 该插件使用 [terser](https://github.com/terser/terser) 来压缩 JavaScript。\n\n### 3.3.4. html-webpack-plugin\n\n### 3.3.5. TNSClientPlugin\n\n# 4. Loader\n\n1. loader的顺序是从下往上，从右往左\n\n## 4.1. start.config.js\n\n### 无\n\n## 4.2. base.config.js\n\n### 4.2.1. babel-loader\n\nbabel-loader可以将ES6、ES7等一些浏览器不支持的高级语法编译成浏览器可以识别的ES5语法。\n\n### 4.2.2. css-loader\n\n对@import和url()进行处理，就像js解析import/require()一样。\n\n### 4.2.3. postcss-loader\n\n进一步处理css文件，比如添加浏览器前缀，压缩CSS等。\n\n### 4.2.4. less-loader\n\n将Less编译成css\n\n### 4.2.5. style-loader\n\n将css插入到dom中，但是我们一般会使用MiniCSSExtractPlugin将CSS打包成独立的css文件，并通过HtmlWebpackPlugin引入css文件，所以可以不用这个loader\n\n### 4.2.6. url-loader\n\n 将文件作为 data URI 内联到 bundle 中\n\n### 4.2.7. file-loader\n\n将文件发送到输出目录\n\n## 4.3 build.config.js\n\n### 无\n\n# 5. Middleware\n\n## 5.1 start.config.js\n\n### 5.1.1. http-proxy-middleware\n\n代理中间件，用于转发请求，将客户端发送的请求数据转发到目标服务器，再将响应输送到客户端。\n\n### 5.1.2. webpack-dev-middleware\n\n生成一个与webpack的compiler绑定的中间件，在express启动的服务app中调用这个中间件。\n![devMiddleware](./读ucf-scripts脚手架源码/3.png)\n作用\n\n1. 通过watch mode，监听资源的变更，自动打包\n1. 快速编译，走内存 ！！！\n1. 返回中间件，支持express的use格式\n\n### 5.1.3. webpack-hot-middleware\n\n实现页面热更新，一般与webpack-dev-middleware配合使用\n![hotMiddleware](./读ucf-scripts脚手架源码/4.png)\n\n# 6. 分析\n\n\n\n**本地起服务走start.js, 编译走build.js。**\n**​**\n\n## 6.1 base.config.js\n\n```javascript\n// 基本配置\nconst config = {\n\toutput: {}, \n  module: {},\n  resolve: {},\n  plugins: {}\n}\n```\n\n### 6.1.1. output\n\n```javascript\n// 配置webpack如何输出、以及在哪里输出你的「bundle、asset 和其他你所打包或使用 webpack 载入的任何内容」。\nconst config = {\n\toutput: {\n        path: path.resolve('.', dist_root, _context), // 输出路径\n        filename: '[name].js', // bundle名称\n        chunkFilename: '[name].js', // 非初始chunk文件的名称\n        publicPath: cfg.publicPath ? '/' + _context : undefined, // 在浏览器中所引用的「此输出目录对应的公开 URL」\n        environment: {\n            // The environment supports arrow functions ('() => { ... }').\n            arrowFunction: false,\n            // The environment supports BigInt as literal (123n).\n            bigIntLiteral: false,\n            // The environment supports const and let for variable declarations.\n            const: false,\n            // The environment supports destructuring ('{ a, b } = obj').\n            destructuring: false,\n            // The environment supports an async import() function to import EcmaScript modules.\n            dynamicImport: false,\n            // The environment supports 'for of' iteration ('for (const x of array) { ... }').\n            forOf: false,\n            // The environment supports ECMAScript Module syntax to import ECMAScript modules (import ... from '...').\n            module: false,\n        }\n    },\n}\n```\n\n### 6.1.2. module\n\n1. 使用相对应的loader对js/less/css/图片/图标字体/svg等做处理编译\n\n### 6.1.3. resolve\n\n```javascript\nconst config = {\n\tresolve: {\n    \t\t// 尝试按顺序解析这些后缀名。如果有多个文件有相同的名字，但后缀名不同，webpack 会解析列在数组首位的后缀的文件 并跳过其余的后缀。\n        extensions: [\n            \".jsx\", \".js\", \".less\", \".css\", \".json\"\n        ],\n    \n    \t\t// 别名配置\n        alias: {\n            'ucf-apps': path.resolve('.', 'ucf-apps/'),\n            'ucf-common': path.resolve('.', 'ucf-common/src/'),\n            components: path.resolve('.', 'ucf-common/src/components/'),\n            static: path.resolve('.', 'ucf-common/src/static/'),\n            utils: path.resolve('.', 'ucf-common/src/utils/')\n        }\n   },\n}\n\n```\n\n### 6.1.4. plugins\n\n```javascript\nconst config = {\n    plugins: [\n        new webpack.BannerPlugin({\n            banner: `File:[file] Date:${new Date()}`\n        }),\n        new MiniCssExtractPlugin({\n            filename: '[name].css',\n            chunkFilename: '[name].css',\n            ignoreOrder: true\n        }),\n        new webpack.ProgressPlugin()\n    ]\n}\n```\n\n## 6.2 start.js\n\n1. 本地起服务的时候，调用server方法，并传入{port, ip}\n\n```javascript\nconst getPort = require('get-port');\nconst ip = require('ip');\n\n() => {\n        // 设置默认端口\n        // 检测是否被占用，更换端口，启动调试服务\n        getPort({\n            port: commands.port || 3000\n        }).then(port => {\n            // 启动服务\n            server({\n                port,\n                ip: ip.address()\n            });\n        });\n  }\n```\n\n2. server方法定义如下\n\n```javascript\nconst webpackConfig = require('./start.config');\nconst compiler = webpack(webpackConfig);\n\nserver = opt => {\n    // 使用webpack-dev-middleware生成一个和webpack的compiler绑定的中间件\n    const instance = devMiddleware(compiler, {\n        publicPath: webpackConfig.output.publicPath,\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Ucf-Server': util.getPkg().version\n        },\n        stats: {\n            colors: true,\n            hash: false,\n            children: false,\n            chunks: false\n        }\n    });\n  \n    // 静态资源托管\n    cfg.static && app.use((cfg.context == '' || cfg.context == undefined) ? '' : `/${cfg.context}`, express.static(path.resolve(\".\", cfg.static)));\n    // 加载实例\n    app.use(instance);\n    // 热更新\n    app.use(hotMiddleware(compiler));\n\n    // 加载代理插件\n    // 处理proxy数组情况\n    cfg.proxy && cfg.proxy.forEach(function (element) {\n        if (element.enable) {// 代理开启\n            // 默认配置项\n            let proxyOpt = {\n                target: element.url,\n                logLevel: \"debug\",\n                changeOrigin: true,\n                pathRewrite: Object.assign({}, element.pathRewrite),\n                headers: (typeof element.headers !== 'undefined' ? element.headers : {}),\n                onProxyRes: function (proxyRes) {\n                    proxyRes.headers[\"Ucf-Proxy\"] = \"success\";\n                }\n            }\n            app.use(element.router, createProxyMiddleware(element.opts || proxyOpt));\n        }\n    });\n    // 运行调试服务\n    app.listen(opt.port, host, () => {\n        console.log();\n        console.log(chalk.green(`----------------------------------------------------`));\n        console.log(chalk.yellow(`\\t 🚀 UCF Develop Server`));\n        console.log(chalk.green(`\\t [Server Version]: 🏅 ${util.getPkg().version}`));\n        console.log(chalk.green(`\\t [Local]         : 🏠 http://${browserHost}:${opt.port}`));\n        console.log(chalk.green(`\\t [Lan]           : 📡 http://${opt.ip}:${opt.port}`));\n        console.log(chalk.green(`----------------------------------------------------`));\n        console.log();\n    });\n}\n```\n\n## 6.3 start.config.js\n\n1. 大致的配置，会与base.config.js合并。\n\n```javascript\nconst base = require('./base.config');\n//默认的配置用于merge操作\nconst config = {\n    devtool: 'source-map',\n    mode: 'development',\n    externals: cfg.externals, // 构建排除指定包\n    resolve: { \n        alias: cfg.alias // 别名配置\n    },\n    module: {\n        rules: cfg.loader // loader配置\n    },\n    plugins: [\n        new webpack.HotModuleReplacementPlugin(), // 热更新Plugin\n        ...HtmlPlugin // 查看第2点\n    ]\n}\n//入口\nconfig.entry = entries;\n\n//环境变量注入\ncfg.global_env && (config.plugins = config.plugins.concat(new webpack.DefinePlugin(cfg.global_env)));\n//传入插件设置\ncfg.devPlugins && (config.plugins = config.plugins.concat(cfg.devPlugins));\nmodule.exports = merge(base, config);\n```\n\n2. HtmlPlugin的相关配置\n\n```javascript\nconst HtmlPlugin = [];\n\n// 判断是否加载默认页面打开浏览器\nif (commands.homepage) {\n    HtmlPlugin.push(new OpenBrowserPlugin({\n        url: `http://${browserHost}:${commands.port || 3000}/${commands.homepage || ''}`\n    }));\n}\n\n\n//加载本地开发环境的Portal\nglob.sync('./ucf-common/src/portal/src/app.js').forEach(_path => {\n    entries['index'] = './ucf-common/src/portal/src/app.js';\n    const htmlConf = {\n        filename: `index.html`,\n        template: './ucf-common/src/portal/src/index.html',\n        inject: 'body',\n        chunks: ['index'],\n        hash: true\n    };\n    HtmlPlugin.push(new HtmlWebPackPlugin(htmlConf));\n});\n\n//构造模块加载入口以及html出口\nbootFiles.forEach(_path => {\n  \n  \t// 获取上下文\n    let _context = \"\";\n    if (!cfg.publicPath && cfg.context) {\n        _context = `${cfg.context}/`;\n    }\n    //模块名\n    const module = _path.split(`./${scan_root}/`)[1].split(`/src/${bootName}`)[0];\n\n    const chunk = `${_context}${module}/index`; // 拼接结果'iuap-mdm-ucf/association/index'\n    const targetDir = _path.split(`/${bootName}`)[0]\n\n    // 兼容其他类型的模版配置，如：ejs\n    const templateType = cfg.templateType ? cfg.templateType : 'html'\n    \n    const htmlConf = Object.assign({\n        filename: `${chunk}.html`,\n        template: `${targetDir}/index.${templateType}`,\n        inject: 'body',\n        chunks: [chunk],\n        hash: true,\n        static_url: cfg.static_url ? cfg.static_url : '' \n    },HtmlPluginConf);\n  \n    //处理启动器逻辑\n    if (bootList && typeof bootList == 'boolean') {\n        entries[chunk] = [_path, require.resolve('./webpack-hot-middleware/client')];\n        HtmlPlugin.push(new HtmlWebPackPlugin(htmlConf));\n    } else if (Array.isArray(bootList) && bootList.length > 0) { // 多入口\n        bootList.forEach(item => {\n            _bootList.add(item);\n        });\n        if (_bootList.has(module)) {\n            entries[chunk] = [_path, require.resolve('./webpack-hot-middleware/client')];\n            HtmlPlugin.push(new HtmlWebPackPlugin(htmlConf));\n        }\n    }\n});\n\n// 统一前端三方包接入TNS\nif (tnsEnabled) {\n    HtmlPlugin.push(new TNSClientPlugin({libraryDebug: true, ...tnsDetailCfg}));\n}\n```\n\n## 6.4 build.js\n\n```javascript\nconst webpackConfig = require('./build.config');\nconst compiler = webpack(webpackConfig);\n\n//启动构建\nmodule.exports = {\n    plugin: () => {\n        build();\n    }\n}\n\n// 调用build方法\nbuild = () => {\n    console.log();\n    console.log(chalk.green(`--------------------------------------------`));\n    console.log(chalk.yellow(`\\t 🚀  UCF Build Server`));\n    console.log(chalk.green(`\\t [Build Version] : 🏅 ${util.getPkg().version}`));\n    console.log();\n    console.log(chalk.green(`\\t 💪 Good Luck Please Wait ☃️`));\n    console.log(chalk.green(`--------------------------------------------`));\n    console.log();\n    compiler.run((err, stats) => {\n        if (!err) {\n            console.log('\\n' + stats.toString({\n                hash: false,\n                chunks: false,\n                children: false,\n                colors: true\n            }));\n        } else {\n            console.log(chalk.red(err));\n        }\n    });\n}\n```\n\n## 6.5. build.config.js\n\n1. 大致的配置，会与base.config.js\n\n```javascript\nconst config = {\n    output,\n    mode: 'production',\n    devtool: 'cheap-module-source-map',\n    externals: cfg.externals,\n    resolve: {\n        alias: cfg.alias\n    },\n    module: {\n        rules: cfg.loader\n    },\n    optimization: {\n        // 不使用内部压缩参数关闭\n        minimize: false\n    },\n    plugins: [\n        new CleanWebpackPlugin(),\n        new OptimizeCSSAssetsPlugin({\n            cssProcessorOptions: {\n                safe: true,\n                mergeLonghand: false,\n                discardComments: { removeAll: true }\n            },\n            canPrint: true\n        }),\n        new TerserPlugin({\n            // test: /\\.js(\\?.*)?$/i,\n            // cache: true,\n            parallel: true,\n            // sourceMap: cfg.open_source_map == undefined ? true : cfg.open_source_map\n            // include:'vendor',\n            // exclude:'vendor',\n        }),\n        ...HtmlPlugin // 查看2点\n    ]\n}\n\n// 入口\nconfig.entry = entries;\n\n// 环境变量注入\ncfg.global_env && (config.plugins = config.plugins.concat(new webpack.DefinePlugin(cfg.global_env)));\n// 传入插件设置\ncfg.buildPlugins && (config.plugins = config.plugins.concat(cfg.buildPlugins));\n// 是否启用优化资源单独生成文件\ncfg.res_extra && (cfg.splitChunks ? config.optimization['splitChunks'] = cfg.splitChunks : config.optimization['splitChunks'] = splitChunks);\nmodule.exports = merge(base, config);\n```\n\n2. HtmlPlugin\n\n```javascript\nconst HtmlPlugin = [];\n\nbootFiles.forEach(_path => {\n    //模块名\n    const module = _path.split(`./${scan_root}/`)[1].split(`/src/${bootName}`)[0];\n    const chunk = `${module}/index`;\n  \n    const targetDir = _path.split(`/${bootName}`)[0]\n    // 兼容其他类型的模版配置，如：ejs\n    const templateType = cfg.templateType ? cfg.templateType : 'html'\n    \n    const htmlConf = Object.assign({\n        filename: `${chunk}.html`,\n        template: `${targetDir}/index.${templateType}`,\n        inject: 'body',\n        chunks: ['vendor', chunk],\n        hash: true,\n        static_url: cfg.static_url ? cfg.static_url : '' \n        },HtmlPluginConf) ;\n        \n    //处理启动器逻辑\n    if (bootList && typeof bootList == 'boolean') {\n        entries[chunk] = _path;\n        HtmlPlugin.push(new HtmlWebPackPlugin(htmlConf));\n    } else if (Array.isArray(bootList) && bootList.length > 0) {\n        bootList.forEach(item => {\n            _bootList.add(item);\n        });\n        if (_bootList.has(module)) {\n            entries[chunk] = _path;\n            HtmlPlugin.push(new HtmlWebPackPlugin(htmlConf));\n        }\n    }\n});\n\nif (tnsEnabled) {\n    HtmlPlugin.push(new TNSClientPlugin({excludeModules}));\n}\n```\n\n3. 其他配置\n\n```javascript\n// output输出的文件添加hash值实现缓存\nconst output = cfg.hasHash ? {\n    ...base.output,\n    filename: '[name].[hash].js',\n    chunkFilename: '[name].[hash].js',\n} : base.output;\n\n\n// splitChunks进行代码分离，避免加载重复代码\nlet splitChunks = {\n    cacheGroups: {\n        default: {\n            minChunks: 2,\n            priority: -20,\n            reuseExistingChunk: true,\n        },\n        //打包重复出现的代码\n        vendor: {\n            chunks: 'initial',\n            minChunks: 2,\n            maxInitialRequests: 5, // The default limit is too small to showcase the effect\n            minSize: 0, // This is example is too small to create commons chunks\n            name: 'vendor'\n        },\n        //打包第三方类库\n        commons: {\n            name: 'vendor',\n            chunks: 'initial',\n            minChunks: Infinity\n        }\n    }\n}\n```\n\n## 6.6 start.config.js与build.config.js差异\n\n### 6.6.1. start.config.js\n\n- 使用HotModuleReplacementPlugin热更新模块\n- 使用open-browser-plugin本地起服务时自动打开指定页面\n\n### 6.6.2. build.cofig.js\n\n- 使用CleanWebpackPlugin在每一次构建前清除指定目录文件 \n- 使用OptimizeCSSAssetsPlugin压缩CSS代码 \n- 使用TerserWebpackPlugin压缩JS代码\n\n### ","source":"_posts/读ucf-scripts脚手架源码.md","raw":"---\ntitle: 读ucf-scripts脚手架源码\ndate: 2022-01-17 16:42:47\nupdate: 2022-01-17 16:42:47\ntags: Webpack\ncategories: Webpack\n---\n# 1. 介绍\n\nucf-scripts是bip平台统一的前端工程脚手架。\n\n<!--more-->\n\n\n# 2. 目录\n\n![目录](./读ucf-scripts脚手架源码/1.png)\n\n目录文件说明\n\n1. base.config.js 基础配置文件\n1. start.js 本地起服务入口文件\n1. build.js 打包服务入口文件\n1. start.config.js 本地起服务配置文件\n1. build.config.js 打包配置文件\n1. utils.js 工具方法\n\n# 3. Plugins插件\n\n## 3.1 start.config.js\n\n### 3.1.1. open-browser-plugin\n\n项目启动后自动打开浏览器\n\n### 3.1.2. html-webpack-plugin\n\nhtml-webpack-plugin 为应用程序生成一个 HTML 文件，并自动将生成的所有 bundle 注入到此文件中。\n\n#### 使用\n\n![htmlWebpackPlugin配置](./读ucf-scripts脚手架源码/2.png)\n\n- 说明\n  1. filename 生成的模版文件的名字\n  2. template 模版来源文件\n  3. inject 引入模板的注入位置，取值有true/false/body/head \n     - true：默认值，script标签位于html文件的body底部\n     - body:script标签位于html文件的body底部\n     - head:script标签位于html文件的head中\n     - false:不插入生成的js文件，这个几乎不会用到\n  4. chunks 引入的模块，这里指定的是entry中设置多个js时，在这里指定引入的js，如果不设置则默认全部引入\n  5. hash \n     - true 打包生成的html文件引入的js/css带有hash值\n  6. static_url\n- 困惑解析使用require.resolve函数来查询某个模块文件的带有完整绝对路径的文件名\n  1. require.resolve(url)\n\n### 3.1.3. HotModuleReplacementPlugin\n\n热更新模块\n\n```javascript\n    plugins: [\n        new webpack.HotModuleReplacementPlugin(),\n        ...HtmlPlugin\n    ]\n```\n\n### 3.1.4. DefinePlugin\n\n允许在 **编译时** 将你代码中的变量替换为其他值或表达式\n\n```javascript\n//环境变量注入\ncfg.global_env && (config.plugins = config.plugins.concat(new webpack.DefinePlugin(cfg.global_env)));\n```\n\n### 3.1.5. @tinper/next-plugin\n\n统一前端三方包接入Plugin\n\n## 3.2. base.config.js\n\n### 3.2.1. BannerPlugin\n\nwebpack内置Plugin，在打包好的js文件最开始处添加版权声明。\n\n```javascript\n    plugins: [\n        new webpack.BannerPlugin({\n            banner: `File:[file] Date:${new Date()}`\n        })\n    ]\n```\n\n### 3.2.2. mini-css-extract-plugin\n\n原本的状态是css-in-js，使用该插件后可以将css单独打包成一个文件。\n\n```javascript\nplugins: [\n        new MiniCssExtractPlugin({\n            filename: '[name].css',\n            chunkFilename: '[name].css',\n            ignoreOrder: true\n        }),\n]\n```\n\n### 3.2.3. ProgressPlugin\n\nwebpack构建进度条。\n\n```javascript\nnew webpack.ProgressPlugin()\n```\n\n## 3.3 build.config.js\n\n### 3.3.1. CleanWebpackPlugin\n\n删除指定目录下的文件。在项目中主要用来在每一次编译前，先删除上一次编译完后的代码。\n\n### 3.3.2. OptimizeCSSAssetsPlugin\n\n压缩css代码\n\n### 3.3.3. TerserWebpackPlugin\n\n1. webpack5已内置该插件，但webpack v4并没有内置。\n1. 该插件使用 [terser](https://github.com/terser/terser) 来压缩 JavaScript。\n\n### 3.3.4. html-webpack-plugin\n\n### 3.3.5. TNSClientPlugin\n\n# 4. Loader\n\n1. loader的顺序是从下往上，从右往左\n\n## 4.1. start.config.js\n\n### 无\n\n## 4.2. base.config.js\n\n### 4.2.1. babel-loader\n\nbabel-loader可以将ES6、ES7等一些浏览器不支持的高级语法编译成浏览器可以识别的ES5语法。\n\n### 4.2.2. css-loader\n\n对@import和url()进行处理，就像js解析import/require()一样。\n\n### 4.2.3. postcss-loader\n\n进一步处理css文件，比如添加浏览器前缀，压缩CSS等。\n\n### 4.2.4. less-loader\n\n将Less编译成css\n\n### 4.2.5. style-loader\n\n将css插入到dom中，但是我们一般会使用MiniCSSExtractPlugin将CSS打包成独立的css文件，并通过HtmlWebpackPlugin引入css文件，所以可以不用这个loader\n\n### 4.2.6. url-loader\n\n 将文件作为 data URI 内联到 bundle 中\n\n### 4.2.7. file-loader\n\n将文件发送到输出目录\n\n## 4.3 build.config.js\n\n### 无\n\n# 5. Middleware\n\n## 5.1 start.config.js\n\n### 5.1.1. http-proxy-middleware\n\n代理中间件，用于转发请求，将客户端发送的请求数据转发到目标服务器，再将响应输送到客户端。\n\n### 5.1.2. webpack-dev-middleware\n\n生成一个与webpack的compiler绑定的中间件，在express启动的服务app中调用这个中间件。\n![devMiddleware](./读ucf-scripts脚手架源码/3.png)\n作用\n\n1. 通过watch mode，监听资源的变更，自动打包\n1. 快速编译，走内存 ！！！\n1. 返回中间件，支持express的use格式\n\n### 5.1.3. webpack-hot-middleware\n\n实现页面热更新，一般与webpack-dev-middleware配合使用\n![hotMiddleware](./读ucf-scripts脚手架源码/4.png)\n\n# 6. 分析\n\n\n\n**本地起服务走start.js, 编译走build.js。**\n**​**\n\n## 6.1 base.config.js\n\n```javascript\n// 基本配置\nconst config = {\n\toutput: {}, \n  module: {},\n  resolve: {},\n  plugins: {}\n}\n```\n\n### 6.1.1. output\n\n```javascript\n// 配置webpack如何输出、以及在哪里输出你的「bundle、asset 和其他你所打包或使用 webpack 载入的任何内容」。\nconst config = {\n\toutput: {\n        path: path.resolve('.', dist_root, _context), // 输出路径\n        filename: '[name].js', // bundle名称\n        chunkFilename: '[name].js', // 非初始chunk文件的名称\n        publicPath: cfg.publicPath ? '/' + _context : undefined, // 在浏览器中所引用的「此输出目录对应的公开 URL」\n        environment: {\n            // The environment supports arrow functions ('() => { ... }').\n            arrowFunction: false,\n            // The environment supports BigInt as literal (123n).\n            bigIntLiteral: false,\n            // The environment supports const and let for variable declarations.\n            const: false,\n            // The environment supports destructuring ('{ a, b } = obj').\n            destructuring: false,\n            // The environment supports an async import() function to import EcmaScript modules.\n            dynamicImport: false,\n            // The environment supports 'for of' iteration ('for (const x of array) { ... }').\n            forOf: false,\n            // The environment supports ECMAScript Module syntax to import ECMAScript modules (import ... from '...').\n            module: false,\n        }\n    },\n}\n```\n\n### 6.1.2. module\n\n1. 使用相对应的loader对js/less/css/图片/图标字体/svg等做处理编译\n\n### 6.1.3. resolve\n\n```javascript\nconst config = {\n\tresolve: {\n    \t\t// 尝试按顺序解析这些后缀名。如果有多个文件有相同的名字，但后缀名不同，webpack 会解析列在数组首位的后缀的文件 并跳过其余的后缀。\n        extensions: [\n            \".jsx\", \".js\", \".less\", \".css\", \".json\"\n        ],\n    \n    \t\t// 别名配置\n        alias: {\n            'ucf-apps': path.resolve('.', 'ucf-apps/'),\n            'ucf-common': path.resolve('.', 'ucf-common/src/'),\n            components: path.resolve('.', 'ucf-common/src/components/'),\n            static: path.resolve('.', 'ucf-common/src/static/'),\n            utils: path.resolve('.', 'ucf-common/src/utils/')\n        }\n   },\n}\n\n```\n\n### 6.1.4. plugins\n\n```javascript\nconst config = {\n    plugins: [\n        new webpack.BannerPlugin({\n            banner: `File:[file] Date:${new Date()}`\n        }),\n        new MiniCssExtractPlugin({\n            filename: '[name].css',\n            chunkFilename: '[name].css',\n            ignoreOrder: true\n        }),\n        new webpack.ProgressPlugin()\n    ]\n}\n```\n\n## 6.2 start.js\n\n1. 本地起服务的时候，调用server方法，并传入{port, ip}\n\n```javascript\nconst getPort = require('get-port');\nconst ip = require('ip');\n\n() => {\n        // 设置默认端口\n        // 检测是否被占用，更换端口，启动调试服务\n        getPort({\n            port: commands.port || 3000\n        }).then(port => {\n            // 启动服务\n            server({\n                port,\n                ip: ip.address()\n            });\n        });\n  }\n```\n\n2. server方法定义如下\n\n```javascript\nconst webpackConfig = require('./start.config');\nconst compiler = webpack(webpackConfig);\n\nserver = opt => {\n    // 使用webpack-dev-middleware生成一个和webpack的compiler绑定的中间件\n    const instance = devMiddleware(compiler, {\n        publicPath: webpackConfig.output.publicPath,\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Ucf-Server': util.getPkg().version\n        },\n        stats: {\n            colors: true,\n            hash: false,\n            children: false,\n            chunks: false\n        }\n    });\n  \n    // 静态资源托管\n    cfg.static && app.use((cfg.context == '' || cfg.context == undefined) ? '' : `/${cfg.context}`, express.static(path.resolve(\".\", cfg.static)));\n    // 加载实例\n    app.use(instance);\n    // 热更新\n    app.use(hotMiddleware(compiler));\n\n    // 加载代理插件\n    // 处理proxy数组情况\n    cfg.proxy && cfg.proxy.forEach(function (element) {\n        if (element.enable) {// 代理开启\n            // 默认配置项\n            let proxyOpt = {\n                target: element.url,\n                logLevel: \"debug\",\n                changeOrigin: true,\n                pathRewrite: Object.assign({}, element.pathRewrite),\n                headers: (typeof element.headers !== 'undefined' ? element.headers : {}),\n                onProxyRes: function (proxyRes) {\n                    proxyRes.headers[\"Ucf-Proxy\"] = \"success\";\n                }\n            }\n            app.use(element.router, createProxyMiddleware(element.opts || proxyOpt));\n        }\n    });\n    // 运行调试服务\n    app.listen(opt.port, host, () => {\n        console.log();\n        console.log(chalk.green(`----------------------------------------------------`));\n        console.log(chalk.yellow(`\\t 🚀 UCF Develop Server`));\n        console.log(chalk.green(`\\t [Server Version]: 🏅 ${util.getPkg().version}`));\n        console.log(chalk.green(`\\t [Local]         : 🏠 http://${browserHost}:${opt.port}`));\n        console.log(chalk.green(`\\t [Lan]           : 📡 http://${opt.ip}:${opt.port}`));\n        console.log(chalk.green(`----------------------------------------------------`));\n        console.log();\n    });\n}\n```\n\n## 6.3 start.config.js\n\n1. 大致的配置，会与base.config.js合并。\n\n```javascript\nconst base = require('./base.config');\n//默认的配置用于merge操作\nconst config = {\n    devtool: 'source-map',\n    mode: 'development',\n    externals: cfg.externals, // 构建排除指定包\n    resolve: { \n        alias: cfg.alias // 别名配置\n    },\n    module: {\n        rules: cfg.loader // loader配置\n    },\n    plugins: [\n        new webpack.HotModuleReplacementPlugin(), // 热更新Plugin\n        ...HtmlPlugin // 查看第2点\n    ]\n}\n//入口\nconfig.entry = entries;\n\n//环境变量注入\ncfg.global_env && (config.plugins = config.plugins.concat(new webpack.DefinePlugin(cfg.global_env)));\n//传入插件设置\ncfg.devPlugins && (config.plugins = config.plugins.concat(cfg.devPlugins));\nmodule.exports = merge(base, config);\n```\n\n2. HtmlPlugin的相关配置\n\n```javascript\nconst HtmlPlugin = [];\n\n// 判断是否加载默认页面打开浏览器\nif (commands.homepage) {\n    HtmlPlugin.push(new OpenBrowserPlugin({\n        url: `http://${browserHost}:${commands.port || 3000}/${commands.homepage || ''}`\n    }));\n}\n\n\n//加载本地开发环境的Portal\nglob.sync('./ucf-common/src/portal/src/app.js').forEach(_path => {\n    entries['index'] = './ucf-common/src/portal/src/app.js';\n    const htmlConf = {\n        filename: `index.html`,\n        template: './ucf-common/src/portal/src/index.html',\n        inject: 'body',\n        chunks: ['index'],\n        hash: true\n    };\n    HtmlPlugin.push(new HtmlWebPackPlugin(htmlConf));\n});\n\n//构造模块加载入口以及html出口\nbootFiles.forEach(_path => {\n  \n  \t// 获取上下文\n    let _context = \"\";\n    if (!cfg.publicPath && cfg.context) {\n        _context = `${cfg.context}/`;\n    }\n    //模块名\n    const module = _path.split(`./${scan_root}/`)[1].split(`/src/${bootName}`)[0];\n\n    const chunk = `${_context}${module}/index`; // 拼接结果'iuap-mdm-ucf/association/index'\n    const targetDir = _path.split(`/${bootName}`)[0]\n\n    // 兼容其他类型的模版配置，如：ejs\n    const templateType = cfg.templateType ? cfg.templateType : 'html'\n    \n    const htmlConf = Object.assign({\n        filename: `${chunk}.html`,\n        template: `${targetDir}/index.${templateType}`,\n        inject: 'body',\n        chunks: [chunk],\n        hash: true,\n        static_url: cfg.static_url ? cfg.static_url : '' \n    },HtmlPluginConf);\n  \n    //处理启动器逻辑\n    if (bootList && typeof bootList == 'boolean') {\n        entries[chunk] = [_path, require.resolve('./webpack-hot-middleware/client')];\n        HtmlPlugin.push(new HtmlWebPackPlugin(htmlConf));\n    } else if (Array.isArray(bootList) && bootList.length > 0) { // 多入口\n        bootList.forEach(item => {\n            _bootList.add(item);\n        });\n        if (_bootList.has(module)) {\n            entries[chunk] = [_path, require.resolve('./webpack-hot-middleware/client')];\n            HtmlPlugin.push(new HtmlWebPackPlugin(htmlConf));\n        }\n    }\n});\n\n// 统一前端三方包接入TNS\nif (tnsEnabled) {\n    HtmlPlugin.push(new TNSClientPlugin({libraryDebug: true, ...tnsDetailCfg}));\n}\n```\n\n## 6.4 build.js\n\n```javascript\nconst webpackConfig = require('./build.config');\nconst compiler = webpack(webpackConfig);\n\n//启动构建\nmodule.exports = {\n    plugin: () => {\n        build();\n    }\n}\n\n// 调用build方法\nbuild = () => {\n    console.log();\n    console.log(chalk.green(`--------------------------------------------`));\n    console.log(chalk.yellow(`\\t 🚀  UCF Build Server`));\n    console.log(chalk.green(`\\t [Build Version] : 🏅 ${util.getPkg().version}`));\n    console.log();\n    console.log(chalk.green(`\\t 💪 Good Luck Please Wait ☃️`));\n    console.log(chalk.green(`--------------------------------------------`));\n    console.log();\n    compiler.run((err, stats) => {\n        if (!err) {\n            console.log('\\n' + stats.toString({\n                hash: false,\n                chunks: false,\n                children: false,\n                colors: true\n            }));\n        } else {\n            console.log(chalk.red(err));\n        }\n    });\n}\n```\n\n## 6.5. build.config.js\n\n1. 大致的配置，会与base.config.js\n\n```javascript\nconst config = {\n    output,\n    mode: 'production',\n    devtool: 'cheap-module-source-map',\n    externals: cfg.externals,\n    resolve: {\n        alias: cfg.alias\n    },\n    module: {\n        rules: cfg.loader\n    },\n    optimization: {\n        // 不使用内部压缩参数关闭\n        minimize: false\n    },\n    plugins: [\n        new CleanWebpackPlugin(),\n        new OptimizeCSSAssetsPlugin({\n            cssProcessorOptions: {\n                safe: true,\n                mergeLonghand: false,\n                discardComments: { removeAll: true }\n            },\n            canPrint: true\n        }),\n        new TerserPlugin({\n            // test: /\\.js(\\?.*)?$/i,\n            // cache: true,\n            parallel: true,\n            // sourceMap: cfg.open_source_map == undefined ? true : cfg.open_source_map\n            // include:'vendor',\n            // exclude:'vendor',\n        }),\n        ...HtmlPlugin // 查看2点\n    ]\n}\n\n// 入口\nconfig.entry = entries;\n\n// 环境变量注入\ncfg.global_env && (config.plugins = config.plugins.concat(new webpack.DefinePlugin(cfg.global_env)));\n// 传入插件设置\ncfg.buildPlugins && (config.plugins = config.plugins.concat(cfg.buildPlugins));\n// 是否启用优化资源单独生成文件\ncfg.res_extra && (cfg.splitChunks ? config.optimization['splitChunks'] = cfg.splitChunks : config.optimization['splitChunks'] = splitChunks);\nmodule.exports = merge(base, config);\n```\n\n2. HtmlPlugin\n\n```javascript\nconst HtmlPlugin = [];\n\nbootFiles.forEach(_path => {\n    //模块名\n    const module = _path.split(`./${scan_root}/`)[1].split(`/src/${bootName}`)[0];\n    const chunk = `${module}/index`;\n  \n    const targetDir = _path.split(`/${bootName}`)[0]\n    // 兼容其他类型的模版配置，如：ejs\n    const templateType = cfg.templateType ? cfg.templateType : 'html'\n    \n    const htmlConf = Object.assign({\n        filename: `${chunk}.html`,\n        template: `${targetDir}/index.${templateType}`,\n        inject: 'body',\n        chunks: ['vendor', chunk],\n        hash: true,\n        static_url: cfg.static_url ? cfg.static_url : '' \n        },HtmlPluginConf) ;\n        \n    //处理启动器逻辑\n    if (bootList && typeof bootList == 'boolean') {\n        entries[chunk] = _path;\n        HtmlPlugin.push(new HtmlWebPackPlugin(htmlConf));\n    } else if (Array.isArray(bootList) && bootList.length > 0) {\n        bootList.forEach(item => {\n            _bootList.add(item);\n        });\n        if (_bootList.has(module)) {\n            entries[chunk] = _path;\n            HtmlPlugin.push(new HtmlWebPackPlugin(htmlConf));\n        }\n    }\n});\n\nif (tnsEnabled) {\n    HtmlPlugin.push(new TNSClientPlugin({excludeModules}));\n}\n```\n\n3. 其他配置\n\n```javascript\n// output输出的文件添加hash值实现缓存\nconst output = cfg.hasHash ? {\n    ...base.output,\n    filename: '[name].[hash].js',\n    chunkFilename: '[name].[hash].js',\n} : base.output;\n\n\n// splitChunks进行代码分离，避免加载重复代码\nlet splitChunks = {\n    cacheGroups: {\n        default: {\n            minChunks: 2,\n            priority: -20,\n            reuseExistingChunk: true,\n        },\n        //打包重复出现的代码\n        vendor: {\n            chunks: 'initial',\n            minChunks: 2,\n            maxInitialRequests: 5, // The default limit is too small to showcase the effect\n            minSize: 0, // This is example is too small to create commons chunks\n            name: 'vendor'\n        },\n        //打包第三方类库\n        commons: {\n            name: 'vendor',\n            chunks: 'initial',\n            minChunks: Infinity\n        }\n    }\n}\n```\n\n## 6.6 start.config.js与build.config.js差异\n\n### 6.6.1. start.config.js\n\n- 使用HotModuleReplacementPlugin热更新模块\n- 使用open-browser-plugin本地起服务时自动打开指定页面\n\n### 6.6.2. build.cofig.js\n\n- 使用CleanWebpackPlugin在每一次构建前清除指定目录文件 \n- 使用OptimizeCSSAssetsPlugin压缩CSS代码 \n- 使用TerserWebpackPlugin压缩JS代码\n\n### ","slug":"读ucf-scripts脚手架源码","published":1,"updated":"2022-01-17T12:19:51.955Z","_id":"ckyifyj7v0000ve1mfyg97i5n","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"1-介绍\"><a href=\"#1-介绍\" class=\"headerlink\" title=\"1. 介绍\"></a>1. 介绍</h1><p>ucf-scripts是bip平台统一的前端工程脚手架。</p>\n<span id=\"more\"></span>\n\n\n<h1 id=\"2-目录\"><a href=\"#2-目录\" class=\"headerlink\" title=\"2. 目录\"></a>2. 目录</h1><p><img src=\"./%E8%AF%BBucf-scripts%E8%84%9A%E6%89%8B%E6%9E%B6%E6%BA%90%E7%A0%81/1.png\" alt=\"目录\"></p>\n<p>目录文件说明</p>\n<ol>\n<li>base.config.js 基础配置文件</li>\n<li>start.js 本地起服务入口文件</li>\n<li>build.js 打包服务入口文件</li>\n<li>start.config.js 本地起服务配置文件</li>\n<li>build.config.js 打包配置文件</li>\n<li>utils.js 工具方法</li>\n</ol>\n<h1 id=\"3-Plugins插件\"><a href=\"#3-Plugins插件\" class=\"headerlink\" title=\"3. Plugins插件\"></a>3. Plugins插件</h1><h2 id=\"3-1-start-config-js\"><a href=\"#3-1-start-config-js\" class=\"headerlink\" title=\"3.1 start.config.js\"></a>3.1 start.config.js</h2><h3 id=\"3-1-1-open-browser-plugin\"><a href=\"#3-1-1-open-browser-plugin\" class=\"headerlink\" title=\"3.1.1. open-browser-plugin\"></a>3.1.1. open-browser-plugin</h3><p>项目启动后自动打开浏览器</p>\n<h3 id=\"3-1-2-html-webpack-plugin\"><a href=\"#3-1-2-html-webpack-plugin\" class=\"headerlink\" title=\"3.1.2. html-webpack-plugin\"></a>3.1.2. html-webpack-plugin</h3><p>html-webpack-plugin 为应用程序生成一个 HTML 文件，并自动将生成的所有 bundle 注入到此文件中。</p>\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><p><img src=\"./%E8%AF%BBucf-scripts%E8%84%9A%E6%89%8B%E6%9E%B6%E6%BA%90%E7%A0%81/2.png\" alt=\"htmlWebpackPlugin配置\"></p>\n<ul>\n<li>说明<ol>\n<li>filename 生成的模版文件的名字</li>\n<li>template 模版来源文件</li>\n<li>inject 引入模板的注入位置，取值有true/false/body/head <ul>\n<li>true：默认值，script标签位于html文件的body底部</li>\n<li>body:script标签位于html文件的body底部</li>\n<li>head:script标签位于html文件的head中</li>\n<li>false:不插入生成的js文件，这个几乎不会用到</li>\n</ul>\n</li>\n<li>chunks 引入的模块，这里指定的是entry中设置多个js时，在这里指定引入的js，如果不设置则默认全部引入</li>\n<li>hash <ul>\n<li>true 打包生成的html文件引入的js/css带有hash值</li>\n</ul>\n</li>\n<li>static_url</li>\n</ol>\n</li>\n<li>困惑解析使用require.resolve函数来查询某个模块文件的带有完整绝对路径的文件名<ol>\n<li>require.resolve(url)</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"3-1-3-HotModuleReplacementPlugin\"><a href=\"#3-1-3-HotModuleReplacementPlugin\" class=\"headerlink\" title=\"3.1.3. HotModuleReplacementPlugin\"></a>3.1.3. HotModuleReplacementPlugin</h3><p>热更新模块</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.HotModuleReplacementPlugin(),</span><br><span class=\"line\">    ...HtmlPlugin</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-1-4-DefinePlugin\"><a href=\"#3-1-4-DefinePlugin\" class=\"headerlink\" title=\"3.1.4. DefinePlugin\"></a>3.1.4. DefinePlugin</h3><p>允许在 <strong>编译时</strong> 将你代码中的变量替换为其他值或表达式</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//环境变量注入</span></span><br><span class=\"line\">cfg.global_env &amp;&amp; (config.plugins = config.plugins.concat(<span class=\"keyword\">new</span> webpack.DefinePlugin(cfg.global_env)));</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-1-5-tinper-next-plugin\"><a href=\"#3-1-5-tinper-next-plugin\" class=\"headerlink\" title=\"3.1.5. @tinper/next-plugin\"></a>3.1.5. @tinper/next-plugin</h3><p>统一前端三方包接入Plugin</p>\n<h2 id=\"3-2-base-config-js\"><a href=\"#3-2-base-config-js\" class=\"headerlink\" title=\"3.2. base.config.js\"></a>3.2. base.config.js</h2><h3 id=\"3-2-1-BannerPlugin\"><a href=\"#3-2-1-BannerPlugin\" class=\"headerlink\" title=\"3.2.1. BannerPlugin\"></a>3.2.1. BannerPlugin</h3><p>webpack内置Plugin，在打包好的js文件最开始处添加版权声明。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.BannerPlugin(&#123;</span><br><span class=\"line\">        <span class=\"attr\">banner</span>: <span class=\"string\">`File:[file] Date:<span class=\"subst\">$&#123;<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()&#125;</span>`</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-2-mini-css-extract-plugin\"><a href=\"#3-2-2-mini-css-extract-plugin\" class=\"headerlink\" title=\"3.2.2. mini-css-extract-plugin\"></a>3.2.2. mini-css-extract-plugin</h3><p>原本的状态是css-in-js，使用该插件后可以将css单独打包成一个文件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins: [</span><br><span class=\"line\">        <span class=\"keyword\">new</span> MiniCssExtractPlugin(&#123;</span><br><span class=\"line\">            <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;[name].css&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">chunkFilename</span>: <span class=\"string\">&#x27;[name].css&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">ignoreOrder</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-3-ProgressPlugin\"><a href=\"#3-2-3-ProgressPlugin\" class=\"headerlink\" title=\"3.2.3. ProgressPlugin\"></a>3.2.3. ProgressPlugin</h3><p>webpack构建进度条。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> webpack.ProgressPlugin()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-3-build-config-js\"><a href=\"#3-3-build-config-js\" class=\"headerlink\" title=\"3.3 build.config.js\"></a>3.3 build.config.js</h2><h3 id=\"3-3-1-CleanWebpackPlugin\"><a href=\"#3-3-1-CleanWebpackPlugin\" class=\"headerlink\" title=\"3.3.1. CleanWebpackPlugin\"></a>3.3.1. CleanWebpackPlugin</h3><p>删除指定目录下的文件。在项目中主要用来在每一次编译前，先删除上一次编译完后的代码。</p>\n<h3 id=\"3-3-2-OptimizeCSSAssetsPlugin\"><a href=\"#3-3-2-OptimizeCSSAssetsPlugin\" class=\"headerlink\" title=\"3.3.2. OptimizeCSSAssetsPlugin\"></a>3.3.2. OptimizeCSSAssetsPlugin</h3><p>压缩css代码</p>\n<h3 id=\"3-3-3-TerserWebpackPlugin\"><a href=\"#3-3-3-TerserWebpackPlugin\" class=\"headerlink\" title=\"3.3.3. TerserWebpackPlugin\"></a>3.3.3. TerserWebpackPlugin</h3><ol>\n<li>webpack5已内置该插件，但webpack v4并没有内置。</li>\n<li>该插件使用 <a href=\"https://github.com/terser/terser\">terser</a> 来压缩 JavaScript。</li>\n</ol>\n<h3 id=\"3-3-4-html-webpack-plugin\"><a href=\"#3-3-4-html-webpack-plugin\" class=\"headerlink\" title=\"3.3.4. html-webpack-plugin\"></a>3.3.4. html-webpack-plugin</h3><h3 id=\"3-3-5-TNSClientPlugin\"><a href=\"#3-3-5-TNSClientPlugin\" class=\"headerlink\" title=\"3.3.5. TNSClientPlugin\"></a>3.3.5. TNSClientPlugin</h3><h1 id=\"4-Loader\"><a href=\"#4-Loader\" class=\"headerlink\" title=\"4. Loader\"></a>4. Loader</h1><ol>\n<li>loader的顺序是从下往上，从右往左</li>\n</ol>\n<h2 id=\"4-1-start-config-js\"><a href=\"#4-1-start-config-js\" class=\"headerlink\" title=\"4.1. start.config.js\"></a>4.1. start.config.js</h2><h3 id=\"无\"><a href=\"#无\" class=\"headerlink\" title=\"无\"></a>无</h3><h2 id=\"4-2-base-config-js\"><a href=\"#4-2-base-config-js\" class=\"headerlink\" title=\"4.2. base.config.js\"></a>4.2. base.config.js</h2><h3 id=\"4-2-1-babel-loader\"><a href=\"#4-2-1-babel-loader\" class=\"headerlink\" title=\"4.2.1. babel-loader\"></a>4.2.1. babel-loader</h3><p>babel-loader可以将ES6、ES7等一些浏览器不支持的高级语法编译成浏览器可以识别的ES5语法。</p>\n<h3 id=\"4-2-2-css-loader\"><a href=\"#4-2-2-css-loader\" class=\"headerlink\" title=\"4.2.2. css-loader\"></a>4.2.2. css-loader</h3><p>对@import和url()进行处理，就像js解析import/require()一样。</p>\n<h3 id=\"4-2-3-postcss-loader\"><a href=\"#4-2-3-postcss-loader\" class=\"headerlink\" title=\"4.2.3. postcss-loader\"></a>4.2.3. postcss-loader</h3><p>进一步处理css文件，比如添加浏览器前缀，压缩CSS等。</p>\n<h3 id=\"4-2-4-less-loader\"><a href=\"#4-2-4-less-loader\" class=\"headerlink\" title=\"4.2.4. less-loader\"></a>4.2.4. less-loader</h3><p>将Less编译成css</p>\n<h3 id=\"4-2-5-style-loader\"><a href=\"#4-2-5-style-loader\" class=\"headerlink\" title=\"4.2.5. style-loader\"></a>4.2.5. style-loader</h3><p>将css插入到dom中，但是我们一般会使用MiniCSSExtractPlugin将CSS打包成独立的css文件，并通过HtmlWebpackPlugin引入css文件，所以可以不用这个loader</p>\n<h3 id=\"4-2-6-url-loader\"><a href=\"#4-2-6-url-loader\" class=\"headerlink\" title=\"4.2.6. url-loader\"></a>4.2.6. url-loader</h3><p> 将文件作为 data URI 内联到 bundle 中</p>\n<h3 id=\"4-2-7-file-loader\"><a href=\"#4-2-7-file-loader\" class=\"headerlink\" title=\"4.2.7. file-loader\"></a>4.2.7. file-loader</h3><p>将文件发送到输出目录</p>\n<h2 id=\"4-3-build-config-js\"><a href=\"#4-3-build-config-js\" class=\"headerlink\" title=\"4.3 build.config.js\"></a>4.3 build.config.js</h2><h3 id=\"无-1\"><a href=\"#无-1\" class=\"headerlink\" title=\"无\"></a>无</h3><h1 id=\"5-Middleware\"><a href=\"#5-Middleware\" class=\"headerlink\" title=\"5. Middleware\"></a>5. Middleware</h1><h2 id=\"5-1-start-config-js\"><a href=\"#5-1-start-config-js\" class=\"headerlink\" title=\"5.1 start.config.js\"></a>5.1 start.config.js</h2><h3 id=\"5-1-1-http-proxy-middleware\"><a href=\"#5-1-1-http-proxy-middleware\" class=\"headerlink\" title=\"5.1.1. http-proxy-middleware\"></a>5.1.1. http-proxy-middleware</h3><p>代理中间件，用于转发请求，将客户端发送的请求数据转发到目标服务器，再将响应输送到客户端。</p>\n<h3 id=\"5-1-2-webpack-dev-middleware\"><a href=\"#5-1-2-webpack-dev-middleware\" class=\"headerlink\" title=\"5.1.2. webpack-dev-middleware\"></a>5.1.2. webpack-dev-middleware</h3><p>生成一个与webpack的compiler绑定的中间件，在express启动的服务app中调用这个中间件。<br><img src=\"./%E8%AF%BBucf-scripts%E8%84%9A%E6%89%8B%E6%9E%B6%E6%BA%90%E7%A0%81/3.png\" alt=\"devMiddleware\"><br>作用</p>\n<ol>\n<li>通过watch mode，监听资源的变更，自动打包</li>\n<li>快速编译，走内存 ！！！</li>\n<li>返回中间件，支持express的use格式</li>\n</ol>\n<h3 id=\"5-1-3-webpack-hot-middleware\"><a href=\"#5-1-3-webpack-hot-middleware\" class=\"headerlink\" title=\"5.1.3. webpack-hot-middleware\"></a>5.1.3. webpack-hot-middleware</h3><p>实现页面热更新，一般与webpack-dev-middleware配合使用<br><img src=\"./%E8%AF%BBucf-scripts%E8%84%9A%E6%89%8B%E6%9E%B6%E6%BA%90%E7%A0%81/4.png\" alt=\"hotMiddleware\"></p>\n<h1 id=\"6-分析\"><a href=\"#6-分析\" class=\"headerlink\" title=\"6. 分析\"></a>6. 分析</h1><p><strong>本地起服务走start.js, 编译走build.js。</strong><br><strong>​</strong></p>\n<h2 id=\"6-1-base-config-js\"><a href=\"#6-1-base-config-js\" class=\"headerlink\" title=\"6.1 base.config.js\"></a>6.1 base.config.js</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 基本配置</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">\t<span class=\"attr\">output</span>: &#123;&#125;, </span><br><span class=\"line\">  <span class=\"attr\">module</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">resolve</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-1-1-output\"><a href=\"#6-1-1-output\" class=\"headerlink\" title=\"6.1.1. output\"></a>6.1.1. output</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 配置webpack如何输出、以及在哪里输出你的「bundle、asset 和其他你所打包或使用 webpack 载入的任何内容」。</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">\t<span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>: path.resolve(<span class=\"string\">&#x27;.&#x27;</span>, dist_root, _context), <span class=\"comment\">// 输出路径</span></span><br><span class=\"line\">        <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;[name].js&#x27;</span>, <span class=\"comment\">// bundle名称</span></span><br><span class=\"line\">        <span class=\"attr\">chunkFilename</span>: <span class=\"string\">&#x27;[name].js&#x27;</span>, <span class=\"comment\">// 非初始chunk文件的名称</span></span><br><span class=\"line\">        <span class=\"attr\">publicPath</span>: cfg.publicPath ? <span class=\"string\">&#x27;/&#x27;</span> + _context : <span class=\"literal\">undefined</span>, <span class=\"comment\">// 在浏览器中所引用的「此输出目录对应的公开 URL」</span></span><br><span class=\"line\">        <span class=\"attr\">environment</span>: &#123;</span><br><span class=\"line\">            <span class=\"comment\">// The environment supports arrow functions (&#x27;() =&gt; &#123; ... &#125;&#x27;).</span></span><br><span class=\"line\">            <span class=\"attr\">arrowFunction</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"comment\">// The environment supports BigInt as literal (123n).</span></span><br><span class=\"line\">            <span class=\"attr\">bigIntLiteral</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"comment\">// The environment supports const and let for variable declarations.</span></span><br><span class=\"line\">            <span class=\"attr\">const</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"comment\">// The environment supports destructuring (&#x27;&#123; a, b &#125; = obj&#x27;).</span></span><br><span class=\"line\">            <span class=\"attr\">destructuring</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"comment\">// The environment supports an async import() function to import EcmaScript modules.</span></span><br><span class=\"line\">            <span class=\"attr\">dynamicImport</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"comment\">// The environment supports &#x27;for of&#x27; iteration (&#x27;for (const x of array) &#123; ... &#125;&#x27;).</span></span><br><span class=\"line\">            <span class=\"attr\">forOf</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"comment\">// The environment supports ECMAScript Module syntax to import ECMAScript modules (import ... from &#x27;...&#x27;).</span></span><br><span class=\"line\">            <span class=\"attr\">module</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-1-2-module\"><a href=\"#6-1-2-module\" class=\"headerlink\" title=\"6.1.2. module\"></a>6.1.2. module</h3><ol>\n<li>使用相对应的loader对js/less/css/图片/图标字体/svg等做处理编译</li>\n</ol>\n<h3 id=\"6-1-3-resolve\"><a href=\"#6-1-3-resolve\" class=\"headerlink\" title=\"6.1.3. resolve\"></a>6.1.3. resolve</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">\t<span class=\"attr\">resolve</span>: &#123;</span><br><span class=\"line\">    \t\t<span class=\"comment\">// 尝试按顺序解析这些后缀名。如果有多个文件有相同的名字，但后缀名不同，webpack 会解析列在数组首位的后缀的文件 并跳过其余的后缀。</span></span><br><span class=\"line\">        <span class=\"attr\">extensions</span>: [</span><br><span class=\"line\">            <span class=\"string\">&quot;.jsx&quot;</span>, <span class=\"string\">&quot;.js&quot;</span>, <span class=\"string\">&quot;.less&quot;</span>, <span class=\"string\">&quot;.css&quot;</span>, <span class=\"string\">&quot;.json&quot;</span></span><br><span class=\"line\">        ],</span><br><span class=\"line\">    </span><br><span class=\"line\">    \t\t<span class=\"comment\">// 别名配置</span></span><br><span class=\"line\">        <span class=\"attr\">alias</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;ucf-apps&#x27;</span>: path.resolve(<span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;ucf-apps/&#x27;</span>),</span><br><span class=\"line\">            <span class=\"string\">&#x27;ucf-common&#x27;</span>: path.resolve(<span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;ucf-common/src/&#x27;</span>),</span><br><span class=\"line\">            <span class=\"attr\">components</span>: path.resolve(<span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;ucf-common/src/components/&#x27;</span>),</span><br><span class=\"line\">            <span class=\"attr\">static</span>: path.resolve(<span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;ucf-common/src/static/&#x27;</span>),</span><br><span class=\"line\">            <span class=\"attr\">utils</span>: path.resolve(<span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;ucf-common/src/utils/&#x27;</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">   &#125;,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-1-4-plugins\"><a href=\"#6-1-4-plugins\" class=\"headerlink\" title=\"6.1.4. plugins\"></a>6.1.4. plugins</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">    <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.BannerPlugin(&#123;</span><br><span class=\"line\">            <span class=\"attr\">banner</span>: <span class=\"string\">`File:[file] Date:<span class=\"subst\">$&#123;<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()&#125;</span>`</span></span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">        <span class=\"keyword\">new</span> MiniCssExtractPlugin(&#123;</span><br><span class=\"line\">            <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;[name].css&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">chunkFilename</span>: <span class=\"string\">&#x27;[name].css&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">ignoreOrder</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.ProgressPlugin()</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-2-start-js\"><a href=\"#6-2-start-js\" class=\"headerlink\" title=\"6.2 start.js\"></a>6.2 start.js</h2><ol>\n<li>本地起服务的时候，调用server方法，并传入{port, ip}</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getPort = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;get-port&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> ip = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;ip&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 设置默认端口</span></span><br><span class=\"line\">        <span class=\"comment\">// 检测是否被占用，更换端口，启动调试服务</span></span><br><span class=\"line\">        getPort(&#123;</span><br><span class=\"line\">            <span class=\"attr\">port</span>: commands.port || <span class=\"number\">3000</span></span><br><span class=\"line\">        &#125;).then(<span class=\"function\"><span class=\"params\">port</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 启动服务</span></span><br><span class=\"line\">            server(&#123;</span><br><span class=\"line\">                port,</span><br><span class=\"line\">                <span class=\"attr\">ip</span>: ip.address()</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>server方法定义如下</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> webpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./start.config&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> compiler = webpack(webpackConfig);</span><br><span class=\"line\"></span><br><span class=\"line\">server = <span class=\"function\"><span class=\"params\">opt</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 使用webpack-dev-middleware生成一个和webpack的compiler绑定的中间件</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> instance = devMiddleware(compiler, &#123;</span><br><span class=\"line\">        <span class=\"attr\">publicPath</span>: webpackConfig.output.publicPath,</span><br><span class=\"line\">        <span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;Access-Control-Allow-Origin&#x27;</span>: <span class=\"string\">&#x27;*&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;Ucf-Server&#x27;</span>: util.getPkg().version</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">stats</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">colors</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            <span class=\"attr\">hash</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">children</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">chunks</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">// 静态资源托管</span></span><br><span class=\"line\">    cfg.static &amp;&amp; app.use((cfg.context == <span class=\"string\">&#x27;&#x27;</span> || cfg.context == <span class=\"literal\">undefined</span>) ? <span class=\"string\">&#x27;&#x27;</span> : <span class=\"string\">`/<span class=\"subst\">$&#123;cfg.context&#125;</span>`</span>, express.static(path.resolve(<span class=\"string\">&quot;.&quot;</span>, cfg.static)));</span><br><span class=\"line\">    <span class=\"comment\">// 加载实例</span></span><br><span class=\"line\">    app.use(instance);</span><br><span class=\"line\">    <span class=\"comment\">// 热更新</span></span><br><span class=\"line\">    app.use(hotMiddleware(compiler));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 加载代理插件</span></span><br><span class=\"line\">    <span class=\"comment\">// 处理proxy数组情况</span></span><br><span class=\"line\">    cfg.proxy &amp;&amp; cfg.proxy.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">element</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (element.enable) &#123;<span class=\"comment\">// 代理开启</span></span><br><span class=\"line\">            <span class=\"comment\">// 默认配置项</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> proxyOpt = &#123;</span><br><span class=\"line\">                <span class=\"attr\">target</span>: element.url,</span><br><span class=\"line\">                <span class=\"attr\">logLevel</span>: <span class=\"string\">&quot;debug&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                <span class=\"attr\">pathRewrite</span>: <span class=\"built_in\">Object</span>.assign(&#123;&#125;, element.pathRewrite),</span><br><span class=\"line\">                <span class=\"attr\">headers</span>: (<span class=\"keyword\">typeof</span> element.headers !== <span class=\"string\">&#x27;undefined&#x27;</span> ? element.headers : &#123;&#125;),</span><br><span class=\"line\">                <span class=\"attr\">onProxyRes</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">proxyRes</span>) </span>&#123;</span><br><span class=\"line\">                    proxyRes.headers[<span class=\"string\">&quot;Ucf-Proxy&quot;</span>] = <span class=\"string\">&quot;success&quot;</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            app.use(element.router, createProxyMiddleware(element.opts || proxyOpt));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">// 运行调试服务</span></span><br><span class=\"line\">    app.listen(opt.port, host, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log();</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(chalk.green(<span class=\"string\">`----------------------------------------------------`</span>));</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(chalk.yellow(<span class=\"string\">`\\t 🚀 UCF Develop Server`</span>));</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(chalk.green(<span class=\"string\">`\\t [Server Version]: 🏅 <span class=\"subst\">$&#123;util.getPkg().version&#125;</span>`</span>));</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(chalk.green(<span class=\"string\">`\\t [Local]         : 🏠 http://<span class=\"subst\">$&#123;browserHost&#125;</span>:<span class=\"subst\">$&#123;opt.port&#125;</span>`</span>));</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(chalk.green(<span class=\"string\">`\\t [Lan]           : 📡 http://<span class=\"subst\">$&#123;opt.ip&#125;</span>:<span class=\"subst\">$&#123;opt.port&#125;</span>`</span>));</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(chalk.green(<span class=\"string\">`----------------------------------------------------`</span>));</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-3-start-config-js\"><a href=\"#6-3-start-config-js\" class=\"headerlink\" title=\"6.3 start.config.js\"></a>6.3 start.config.js</h2><ol>\n<li>大致的配置，会与base.config.js合并。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> base = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./base.config&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">//默认的配置用于merge操作</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">    <span class=\"attr\">devtool</span>: <span class=\"string\">&#x27;source-map&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;development&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">externals</span>: cfg.externals, <span class=\"comment\">// 构建排除指定包</span></span><br><span class=\"line\">    <span class=\"attr\">resolve</span>: &#123; </span><br><span class=\"line\">        <span class=\"attr\">alias</span>: cfg.alias <span class=\"comment\">// 别名配置</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">rules</span>: cfg.loader <span class=\"comment\">// loader配置</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.HotModuleReplacementPlugin(), <span class=\"comment\">// 热更新Plugin</span></span><br><span class=\"line\">        ...HtmlPlugin <span class=\"comment\">// 查看第2点</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//入口</span></span><br><span class=\"line\">config.entry = entries;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//环境变量注入</span></span><br><span class=\"line\">cfg.global_env &amp;&amp; (config.plugins = config.plugins.concat(<span class=\"keyword\">new</span> webpack.DefinePlugin(cfg.global_env)));</span><br><span class=\"line\"><span class=\"comment\">//传入插件设置</span></span><br><span class=\"line\">cfg.devPlugins &amp;&amp; (config.plugins = config.plugins.concat(cfg.devPlugins));</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = merge(base, config);</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>HtmlPlugin的相关配置</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> HtmlPlugin = [];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 判断是否加载默认页面打开浏览器</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (commands.homepage) &#123;</span><br><span class=\"line\">    HtmlPlugin.push(<span class=\"keyword\">new</span> OpenBrowserPlugin(&#123;</span><br><span class=\"line\">        <span class=\"attr\">url</span>: <span class=\"string\">`http://<span class=\"subst\">$&#123;browserHost&#125;</span>:<span class=\"subst\">$&#123;commands.port || <span class=\"number\">3000</span>&#125;</span>/<span class=\"subst\">$&#123;commands.homepage || <span class=\"string\">&#x27;&#x27;</span>&#125;</span>`</span></span><br><span class=\"line\">    &#125;));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//加载本地开发环境的Portal</span></span><br><span class=\"line\">glob.sync(<span class=\"string\">&#x27;./ucf-common/src/portal/src/app.js&#x27;</span>).forEach(<span class=\"function\"><span class=\"params\">_path</span> =&gt;</span> &#123;</span><br><span class=\"line\">    entries[<span class=\"string\">&#x27;index&#x27;</span>] = <span class=\"string\">&#x27;./ucf-common/src/portal/src/app.js&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> htmlConf = &#123;</span><br><span class=\"line\">        <span class=\"attr\">filename</span>: <span class=\"string\">`index.html`</span>,</span><br><span class=\"line\">        <span class=\"attr\">template</span>: <span class=\"string\">&#x27;./ucf-common/src/portal/src/index.html&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">inject</span>: <span class=\"string\">&#x27;body&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">chunks</span>: [<span class=\"string\">&#x27;index&#x27;</span>],</span><br><span class=\"line\">        <span class=\"attr\">hash</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    HtmlPlugin.push(<span class=\"keyword\">new</span> HtmlWebPackPlugin(htmlConf));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//构造模块加载入口以及html出口</span></span><br><span class=\"line\">bootFiles.forEach(<span class=\"function\"><span class=\"params\">_path</span> =&gt;</span> &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  \t<span class=\"comment\">// 获取上下文</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> _context = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!cfg.publicPath &amp;&amp; cfg.context) &#123;</span><br><span class=\"line\">        _context = <span class=\"string\">`<span class=\"subst\">$&#123;cfg.context&#125;</span>/`</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//模块名</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"built_in\">module</span> = _path.split(<span class=\"string\">`./<span class=\"subst\">$&#123;scan_root&#125;</span>/`</span>)[<span class=\"number\">1</span>].split(<span class=\"string\">`/src/<span class=\"subst\">$&#123;bootName&#125;</span>`</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> chunk = <span class=\"string\">`<span class=\"subst\">$&#123;_context&#125;</span><span class=\"subst\">$&#123;<span class=\"built_in\">module</span>&#125;</span>/index`</span>; <span class=\"comment\">// 拼接结果&#x27;iuap-mdm-ucf/association/index&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> targetDir = _path.split(<span class=\"string\">`/<span class=\"subst\">$&#123;bootName&#125;</span>`</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 兼容其他类型的模版配置，如：ejs</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> templateType = cfg.templateType ? cfg.templateType : <span class=\"string\">&#x27;html&#x27;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">const</span> htmlConf = <span class=\"built_in\">Object</span>.assign(&#123;</span><br><span class=\"line\">        <span class=\"attr\">filename</span>: <span class=\"string\">`<span class=\"subst\">$&#123;chunk&#125;</span>.html`</span>,</span><br><span class=\"line\">        <span class=\"attr\">template</span>: <span class=\"string\">`<span class=\"subst\">$&#123;targetDir&#125;</span>/index.<span class=\"subst\">$&#123;templateType&#125;</span>`</span>,</span><br><span class=\"line\">        <span class=\"attr\">inject</span>: <span class=\"string\">&#x27;body&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">chunks</span>: [chunk],</span><br><span class=\"line\">        <span class=\"attr\">hash</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">static_url</span>: cfg.static_url ? cfg.static_url : <span class=\"string\">&#x27;&#x27;</span> </span><br><span class=\"line\">    &#125;,HtmlPluginConf);</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//处理启动器逻辑</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (bootList &amp;&amp; <span class=\"keyword\">typeof</span> bootList == <span class=\"string\">&#x27;boolean&#x27;</span>) &#123;</span><br><span class=\"line\">        entries[chunk] = [_path, <span class=\"built_in\">require</span>.resolve(<span class=\"string\">&#x27;./webpack-hot-middleware/client&#x27;</span>)];</span><br><span class=\"line\">        HtmlPlugin.push(<span class=\"keyword\">new</span> HtmlWebPackPlugin(htmlConf));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">Array</span>.isArray(bootList) &amp;&amp; bootList.length &gt; <span class=\"number\">0</span>) &#123; <span class=\"comment\">// 多入口</span></span><br><span class=\"line\">        bootList.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">            _bootList.add(item);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_bootList.has(<span class=\"built_in\">module</span>)) &#123;</span><br><span class=\"line\">            entries[chunk] = [_path, <span class=\"built_in\">require</span>.resolve(<span class=\"string\">&#x27;./webpack-hot-middleware/client&#x27;</span>)];</span><br><span class=\"line\">            HtmlPlugin.push(<span class=\"keyword\">new</span> HtmlWebPackPlugin(htmlConf));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 统一前端三方包接入TNS</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (tnsEnabled) &#123;</span><br><span class=\"line\">    HtmlPlugin.push(<span class=\"keyword\">new</span> TNSClientPlugin(&#123;<span class=\"attr\">libraryDebug</span>: <span class=\"literal\">true</span>, ...tnsDetailCfg&#125;));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-4-build-js\"><a href=\"#6-4-build-js\" class=\"headerlink\" title=\"6.4 build.js\"></a>6.4 build.js</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> webpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./build.config&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> compiler = webpack(webpackConfig);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//启动构建</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    <span class=\"attr\">plugin</span>: <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 调用build方法</span></span><br><span class=\"line\">build = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log();</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(chalk.green(<span class=\"string\">`--------------------------------------------`</span>));</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(chalk.yellow(<span class=\"string\">`\\t 🚀  UCF Build Server`</span>));</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(chalk.green(<span class=\"string\">`\\t [Build Version] : 🏅 <span class=\"subst\">$&#123;util.getPkg().version&#125;</span>`</span>));</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log();</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(chalk.green(<span class=\"string\">`\\t 💪 Good Luck Please Wait ☃️`</span>));</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(chalk.green(<span class=\"string\">`--------------------------------------------`</span>));</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log();</span><br><span class=\"line\">    compiler.run(<span class=\"function\">(<span class=\"params\">err, stats</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!err) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;\\n&#x27;</span> + stats.toString(&#123;</span><br><span class=\"line\">                <span class=\"attr\">hash</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">                <span class=\"attr\">chunks</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">                <span class=\"attr\">children</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">                <span class=\"attr\">colors</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">            &#125;));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(chalk.red(err));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-5-build-config-js\"><a href=\"#6-5-build-config-js\" class=\"headerlink\" title=\"6.5. build.config.js\"></a>6.5. build.config.js</h2><ol>\n<li>大致的配置，会与base.config.js</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">    output,</span><br><span class=\"line\">    <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;production&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">devtool</span>: <span class=\"string\">&#x27;cheap-module-source-map&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">externals</span>: cfg.externals,</span><br><span class=\"line\">    <span class=\"attr\">resolve</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">alias</span>: cfg.alias</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">rules</span>: cfg.loader</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">optimization</span>: &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 不使用内部压缩参数关闭</span></span><br><span class=\"line\">        <span class=\"attr\">minimize</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">        <span class=\"keyword\">new</span> CleanWebpackPlugin(),</span><br><span class=\"line\">        <span class=\"keyword\">new</span> OptimizeCSSAssetsPlugin(&#123;</span><br><span class=\"line\">            <span class=\"attr\">cssProcessorOptions</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">safe</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                <span class=\"attr\">mergeLonghand</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">                <span class=\"attr\">discardComments</span>: &#123; <span class=\"attr\">removeAll</span>: <span class=\"literal\">true</span> &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">canPrint</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">        <span class=\"keyword\">new</span> TerserPlugin(&#123;</span><br><span class=\"line\">            <span class=\"comment\">// test: /\\.js(\\?.*)?$/i,</span></span><br><span class=\"line\">            <span class=\"comment\">// cache: true,</span></span><br><span class=\"line\">            <span class=\"attr\">parallel</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            <span class=\"comment\">// sourceMap: cfg.open_source_map == undefined ? true : cfg.open_source_map</span></span><br><span class=\"line\">            <span class=\"comment\">// include:&#x27;vendor&#x27;,</span></span><br><span class=\"line\">            <span class=\"comment\">// exclude:&#x27;vendor&#x27;,</span></span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">        ...HtmlPlugin <span class=\"comment\">// 查看2点</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 入口</span></span><br><span class=\"line\">config.entry = entries;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 环境变量注入</span></span><br><span class=\"line\">cfg.global_env &amp;&amp; (config.plugins = config.plugins.concat(<span class=\"keyword\">new</span> webpack.DefinePlugin(cfg.global_env)));</span><br><span class=\"line\"><span class=\"comment\">// 传入插件设置</span></span><br><span class=\"line\">cfg.buildPlugins &amp;&amp; (config.plugins = config.plugins.concat(cfg.buildPlugins));</span><br><span class=\"line\"><span class=\"comment\">// 是否启用优化资源单独生成文件</span></span><br><span class=\"line\">cfg.res_extra &amp;&amp; (cfg.splitChunks ? config.optimization[<span class=\"string\">&#x27;splitChunks&#x27;</span>] = cfg.splitChunks : config.optimization[<span class=\"string\">&#x27;splitChunks&#x27;</span>] = splitChunks);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = merge(base, config);</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>HtmlPlugin</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> HtmlPlugin = [];</span><br><span class=\"line\"></span><br><span class=\"line\">bootFiles.forEach(<span class=\"function\"><span class=\"params\">_path</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//模块名</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"built_in\">module</span> = _path.split(<span class=\"string\">`./<span class=\"subst\">$&#123;scan_root&#125;</span>/`</span>)[<span class=\"number\">1</span>].split(<span class=\"string\">`/src/<span class=\"subst\">$&#123;bootName&#125;</span>`</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> chunk = <span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"built_in\">module</span>&#125;</span>/index`</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">const</span> targetDir = _path.split(<span class=\"string\">`/<span class=\"subst\">$&#123;bootName&#125;</span>`</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"comment\">// 兼容其他类型的模版配置，如：ejs</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> templateType = cfg.templateType ? cfg.templateType : <span class=\"string\">&#x27;html&#x27;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">const</span> htmlConf = <span class=\"built_in\">Object</span>.assign(&#123;</span><br><span class=\"line\">        <span class=\"attr\">filename</span>: <span class=\"string\">`<span class=\"subst\">$&#123;chunk&#125;</span>.html`</span>,</span><br><span class=\"line\">        <span class=\"attr\">template</span>: <span class=\"string\">`<span class=\"subst\">$&#123;targetDir&#125;</span>/index.<span class=\"subst\">$&#123;templateType&#125;</span>`</span>,</span><br><span class=\"line\">        <span class=\"attr\">inject</span>: <span class=\"string\">&#x27;body&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">chunks</span>: [<span class=\"string\">&#x27;vendor&#x27;</span>, chunk],</span><br><span class=\"line\">        <span class=\"attr\">hash</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">static_url</span>: cfg.static_url ? cfg.static_url : <span class=\"string\">&#x27;&#x27;</span> </span><br><span class=\"line\">        &#125;,HtmlPluginConf) ;</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"comment\">//处理启动器逻辑</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (bootList &amp;&amp; <span class=\"keyword\">typeof</span> bootList == <span class=\"string\">&#x27;boolean&#x27;</span>) &#123;</span><br><span class=\"line\">        entries[chunk] = _path;</span><br><span class=\"line\">        HtmlPlugin.push(<span class=\"keyword\">new</span> HtmlWebPackPlugin(htmlConf));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">Array</span>.isArray(bootList) &amp;&amp; bootList.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        bootList.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">            _bootList.add(item);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_bootList.has(<span class=\"built_in\">module</span>)) &#123;</span><br><span class=\"line\">            entries[chunk] = _path;</span><br><span class=\"line\">            HtmlPlugin.push(<span class=\"keyword\">new</span> HtmlWebPackPlugin(htmlConf));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (tnsEnabled) &#123;</span><br><span class=\"line\">    HtmlPlugin.push(<span class=\"keyword\">new</span> TNSClientPlugin(&#123;excludeModules&#125;));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>其他配置</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// output输出的文件添加hash值实现缓存</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> output = cfg.hasHash ? &#123;</span><br><span class=\"line\">    ...base.output,</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;[name].[hash].js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">chunkFilename</span>: <span class=\"string\">&#x27;[name].[hash].js&#x27;</span>,</span><br><span class=\"line\">&#125; : base.output;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// splitChunks进行代码分离，避免加载重复代码</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> splitChunks = &#123;</span><br><span class=\"line\">    <span class=\"attr\">cacheGroups</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">default</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">minChunks</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">            <span class=\"attr\">priority</span>: -<span class=\"number\">20</span>,</span><br><span class=\"line\">            <span class=\"attr\">reuseExistingChunk</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"comment\">//打包重复出现的代码</span></span><br><span class=\"line\">        <span class=\"attr\">vendor</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">chunks</span>: <span class=\"string\">&#x27;initial&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">minChunks</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">            <span class=\"attr\">maxInitialRequests</span>: <span class=\"number\">5</span>, <span class=\"comment\">// The default limit is too small to showcase the effect</span></span><br><span class=\"line\">            <span class=\"attr\">minSize</span>: <span class=\"number\">0</span>, <span class=\"comment\">// This is example is too small to create commons chunks</span></span><br><span class=\"line\">            <span class=\"attr\">name</span>: <span class=\"string\">&#x27;vendor&#x27;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"comment\">//打包第三方类库</span></span><br><span class=\"line\">        <span class=\"attr\">commons</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">name</span>: <span class=\"string\">&#x27;vendor&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">chunks</span>: <span class=\"string\">&#x27;initial&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">minChunks</span>: <span class=\"literal\">Infinity</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-6-start-config-js与build-config-js差异\"><a href=\"#6-6-start-config-js与build-config-js差异\" class=\"headerlink\" title=\"6.6 start.config.js与build.config.js差异\"></a>6.6 start.config.js与build.config.js差异</h2><h3 id=\"6-6-1-start-config-js\"><a href=\"#6-6-1-start-config-js\" class=\"headerlink\" title=\"6.6.1. start.config.js\"></a>6.6.1. start.config.js</h3><ul>\n<li>使用HotModuleReplacementPlugin热更新模块</li>\n<li>使用open-browser-plugin本地起服务时自动打开指定页面</li>\n</ul>\n<h3 id=\"6-6-2-build-cofig-js\"><a href=\"#6-6-2-build-cofig-js\" class=\"headerlink\" title=\"6.6.2. build.cofig.js\"></a>6.6.2. build.cofig.js</h3><ul>\n<li>使用CleanWebpackPlugin在每一次构建前清除指定目录文件 </li>\n<li>使用OptimizeCSSAssetsPlugin压缩CSS代码 </li>\n<li>使用TerserWebpackPlugin压缩JS代码</li>\n</ul>\n<h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h3>","site":{"data":{}},"length":13936,"excerpt":"<h1 id=\"1-介绍\"><a href=\"#1-介绍\" class=\"headerlink\" title=\"1. 介绍\"></a>1. 介绍</h1><p>ucf-scripts是bip平台统一的前端工程脚手架。</p>","more":"<h1 id=\"2-目录\"><a href=\"#2-目录\" class=\"headerlink\" title=\"2. 目录\"></a>2. 目录</h1><p><img src=\"./%E8%AF%BBucf-scripts%E8%84%9A%E6%89%8B%E6%9E%B6%E6%BA%90%E7%A0%81/1.png\" alt=\"目录\"></p>\n<p>目录文件说明</p>\n<ol>\n<li>base.config.js 基础配置文件</li>\n<li>start.js 本地起服务入口文件</li>\n<li>build.js 打包服务入口文件</li>\n<li>start.config.js 本地起服务配置文件</li>\n<li>build.config.js 打包配置文件</li>\n<li>utils.js 工具方法</li>\n</ol>\n<h1 id=\"3-Plugins插件\"><a href=\"#3-Plugins插件\" class=\"headerlink\" title=\"3. Plugins插件\"></a>3. Plugins插件</h1><h2 id=\"3-1-start-config-js\"><a href=\"#3-1-start-config-js\" class=\"headerlink\" title=\"3.1 start.config.js\"></a>3.1 start.config.js</h2><h3 id=\"3-1-1-open-browser-plugin\"><a href=\"#3-1-1-open-browser-plugin\" class=\"headerlink\" title=\"3.1.1. open-browser-plugin\"></a>3.1.1. open-browser-plugin</h3><p>项目启动后自动打开浏览器</p>\n<h3 id=\"3-1-2-html-webpack-plugin\"><a href=\"#3-1-2-html-webpack-plugin\" class=\"headerlink\" title=\"3.1.2. html-webpack-plugin\"></a>3.1.2. html-webpack-plugin</h3><p>html-webpack-plugin 为应用程序生成一个 HTML 文件，并自动将生成的所有 bundle 注入到此文件中。</p>\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><p><img src=\"./%E8%AF%BBucf-scripts%E8%84%9A%E6%89%8B%E6%9E%B6%E6%BA%90%E7%A0%81/2.png\" alt=\"htmlWebpackPlugin配置\"></p>\n<ul>\n<li>说明<ol>\n<li>filename 生成的模版文件的名字</li>\n<li>template 模版来源文件</li>\n<li>inject 引入模板的注入位置，取值有true/false/body/head <ul>\n<li>true：默认值，script标签位于html文件的body底部</li>\n<li>body:script标签位于html文件的body底部</li>\n<li>head:script标签位于html文件的head中</li>\n<li>false:不插入生成的js文件，这个几乎不会用到</li>\n</ul>\n</li>\n<li>chunks 引入的模块，这里指定的是entry中设置多个js时，在这里指定引入的js，如果不设置则默认全部引入</li>\n<li>hash <ul>\n<li>true 打包生成的html文件引入的js/css带有hash值</li>\n</ul>\n</li>\n<li>static_url</li>\n</ol>\n</li>\n<li>困惑解析使用require.resolve函数来查询某个模块文件的带有完整绝对路径的文件名<ol>\n<li>require.resolve(url)</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"3-1-3-HotModuleReplacementPlugin\"><a href=\"#3-1-3-HotModuleReplacementPlugin\" class=\"headerlink\" title=\"3.1.3. HotModuleReplacementPlugin\"></a>3.1.3. HotModuleReplacementPlugin</h3><p>热更新模块</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.HotModuleReplacementPlugin(),</span><br><span class=\"line\">    ...HtmlPlugin</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-1-4-DefinePlugin\"><a href=\"#3-1-4-DefinePlugin\" class=\"headerlink\" title=\"3.1.4. DefinePlugin\"></a>3.1.4. DefinePlugin</h3><p>允许在 <strong>编译时</strong> 将你代码中的变量替换为其他值或表达式</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//环境变量注入</span></span><br><span class=\"line\">cfg.global_env &amp;&amp; (config.plugins = config.plugins.concat(<span class=\"keyword\">new</span> webpack.DefinePlugin(cfg.global_env)));</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-1-5-tinper-next-plugin\"><a href=\"#3-1-5-tinper-next-plugin\" class=\"headerlink\" title=\"3.1.5. @tinper/next-plugin\"></a>3.1.5. @tinper/next-plugin</h3><p>统一前端三方包接入Plugin</p>\n<h2 id=\"3-2-base-config-js\"><a href=\"#3-2-base-config-js\" class=\"headerlink\" title=\"3.2. base.config.js\"></a>3.2. base.config.js</h2><h3 id=\"3-2-1-BannerPlugin\"><a href=\"#3-2-1-BannerPlugin\" class=\"headerlink\" title=\"3.2.1. BannerPlugin\"></a>3.2.1. BannerPlugin</h3><p>webpack内置Plugin，在打包好的js文件最开始处添加版权声明。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.BannerPlugin(&#123;</span><br><span class=\"line\">        <span class=\"attr\">banner</span>: <span class=\"string\">`File:[file] Date:<span class=\"subst\">$&#123;<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()&#125;</span>`</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-2-mini-css-extract-plugin\"><a href=\"#3-2-2-mini-css-extract-plugin\" class=\"headerlink\" title=\"3.2.2. mini-css-extract-plugin\"></a>3.2.2. mini-css-extract-plugin</h3><p>原本的状态是css-in-js，使用该插件后可以将css单独打包成一个文件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins: [</span><br><span class=\"line\">        <span class=\"keyword\">new</span> MiniCssExtractPlugin(&#123;</span><br><span class=\"line\">            <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;[name].css&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">chunkFilename</span>: <span class=\"string\">&#x27;[name].css&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">ignoreOrder</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-3-ProgressPlugin\"><a href=\"#3-2-3-ProgressPlugin\" class=\"headerlink\" title=\"3.2.3. ProgressPlugin\"></a>3.2.3. ProgressPlugin</h3><p>webpack构建进度条。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> webpack.ProgressPlugin()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-3-build-config-js\"><a href=\"#3-3-build-config-js\" class=\"headerlink\" title=\"3.3 build.config.js\"></a>3.3 build.config.js</h2><h3 id=\"3-3-1-CleanWebpackPlugin\"><a href=\"#3-3-1-CleanWebpackPlugin\" class=\"headerlink\" title=\"3.3.1. CleanWebpackPlugin\"></a>3.3.1. CleanWebpackPlugin</h3><p>删除指定目录下的文件。在项目中主要用来在每一次编译前，先删除上一次编译完后的代码。</p>\n<h3 id=\"3-3-2-OptimizeCSSAssetsPlugin\"><a href=\"#3-3-2-OptimizeCSSAssetsPlugin\" class=\"headerlink\" title=\"3.3.2. OptimizeCSSAssetsPlugin\"></a>3.3.2. OptimizeCSSAssetsPlugin</h3><p>压缩css代码</p>\n<h3 id=\"3-3-3-TerserWebpackPlugin\"><a href=\"#3-3-3-TerserWebpackPlugin\" class=\"headerlink\" title=\"3.3.3. TerserWebpackPlugin\"></a>3.3.3. TerserWebpackPlugin</h3><ol>\n<li>webpack5已内置该插件，但webpack v4并没有内置。</li>\n<li>该插件使用 <a href=\"https://github.com/terser/terser\">terser</a> 来压缩 JavaScript。</li>\n</ol>\n<h3 id=\"3-3-4-html-webpack-plugin\"><a href=\"#3-3-4-html-webpack-plugin\" class=\"headerlink\" title=\"3.3.4. html-webpack-plugin\"></a>3.3.4. html-webpack-plugin</h3><h3 id=\"3-3-5-TNSClientPlugin\"><a href=\"#3-3-5-TNSClientPlugin\" class=\"headerlink\" title=\"3.3.5. TNSClientPlugin\"></a>3.3.5. TNSClientPlugin</h3><h1 id=\"4-Loader\"><a href=\"#4-Loader\" class=\"headerlink\" title=\"4. Loader\"></a>4. Loader</h1><ol>\n<li>loader的顺序是从下往上，从右往左</li>\n</ol>\n<h2 id=\"4-1-start-config-js\"><a href=\"#4-1-start-config-js\" class=\"headerlink\" title=\"4.1. start.config.js\"></a>4.1. start.config.js</h2><h3 id=\"无\"><a href=\"#无\" class=\"headerlink\" title=\"无\"></a>无</h3><h2 id=\"4-2-base-config-js\"><a href=\"#4-2-base-config-js\" class=\"headerlink\" title=\"4.2. base.config.js\"></a>4.2. base.config.js</h2><h3 id=\"4-2-1-babel-loader\"><a href=\"#4-2-1-babel-loader\" class=\"headerlink\" title=\"4.2.1. babel-loader\"></a>4.2.1. babel-loader</h3><p>babel-loader可以将ES6、ES7等一些浏览器不支持的高级语法编译成浏览器可以识别的ES5语法。</p>\n<h3 id=\"4-2-2-css-loader\"><a href=\"#4-2-2-css-loader\" class=\"headerlink\" title=\"4.2.2. css-loader\"></a>4.2.2. css-loader</h3><p>对@import和url()进行处理，就像js解析import/require()一样。</p>\n<h3 id=\"4-2-3-postcss-loader\"><a href=\"#4-2-3-postcss-loader\" class=\"headerlink\" title=\"4.2.3. postcss-loader\"></a>4.2.3. postcss-loader</h3><p>进一步处理css文件，比如添加浏览器前缀，压缩CSS等。</p>\n<h3 id=\"4-2-4-less-loader\"><a href=\"#4-2-4-less-loader\" class=\"headerlink\" title=\"4.2.4. less-loader\"></a>4.2.4. less-loader</h3><p>将Less编译成css</p>\n<h3 id=\"4-2-5-style-loader\"><a href=\"#4-2-5-style-loader\" class=\"headerlink\" title=\"4.2.5. style-loader\"></a>4.2.5. style-loader</h3><p>将css插入到dom中，但是我们一般会使用MiniCSSExtractPlugin将CSS打包成独立的css文件，并通过HtmlWebpackPlugin引入css文件，所以可以不用这个loader</p>\n<h3 id=\"4-2-6-url-loader\"><a href=\"#4-2-6-url-loader\" class=\"headerlink\" title=\"4.2.6. url-loader\"></a>4.2.6. url-loader</h3><p> 将文件作为 data URI 内联到 bundle 中</p>\n<h3 id=\"4-2-7-file-loader\"><a href=\"#4-2-7-file-loader\" class=\"headerlink\" title=\"4.2.7. file-loader\"></a>4.2.7. file-loader</h3><p>将文件发送到输出目录</p>\n<h2 id=\"4-3-build-config-js\"><a href=\"#4-3-build-config-js\" class=\"headerlink\" title=\"4.3 build.config.js\"></a>4.3 build.config.js</h2><h3 id=\"无-1\"><a href=\"#无-1\" class=\"headerlink\" title=\"无\"></a>无</h3><h1 id=\"5-Middleware\"><a href=\"#5-Middleware\" class=\"headerlink\" title=\"5. Middleware\"></a>5. Middleware</h1><h2 id=\"5-1-start-config-js\"><a href=\"#5-1-start-config-js\" class=\"headerlink\" title=\"5.1 start.config.js\"></a>5.1 start.config.js</h2><h3 id=\"5-1-1-http-proxy-middleware\"><a href=\"#5-1-1-http-proxy-middleware\" class=\"headerlink\" title=\"5.1.1. http-proxy-middleware\"></a>5.1.1. http-proxy-middleware</h3><p>代理中间件，用于转发请求，将客户端发送的请求数据转发到目标服务器，再将响应输送到客户端。</p>\n<h3 id=\"5-1-2-webpack-dev-middleware\"><a href=\"#5-1-2-webpack-dev-middleware\" class=\"headerlink\" title=\"5.1.2. webpack-dev-middleware\"></a>5.1.2. webpack-dev-middleware</h3><p>生成一个与webpack的compiler绑定的中间件，在express启动的服务app中调用这个中间件。<br><img src=\"./%E8%AF%BBucf-scripts%E8%84%9A%E6%89%8B%E6%9E%B6%E6%BA%90%E7%A0%81/3.png\" alt=\"devMiddleware\"><br>作用</p>\n<ol>\n<li>通过watch mode，监听资源的变更，自动打包</li>\n<li>快速编译，走内存 ！！！</li>\n<li>返回中间件，支持express的use格式</li>\n</ol>\n<h3 id=\"5-1-3-webpack-hot-middleware\"><a href=\"#5-1-3-webpack-hot-middleware\" class=\"headerlink\" title=\"5.1.3. webpack-hot-middleware\"></a>5.1.3. webpack-hot-middleware</h3><p>实现页面热更新，一般与webpack-dev-middleware配合使用<br><img src=\"./%E8%AF%BBucf-scripts%E8%84%9A%E6%89%8B%E6%9E%B6%E6%BA%90%E7%A0%81/4.png\" alt=\"hotMiddleware\"></p>\n<h1 id=\"6-分析\"><a href=\"#6-分析\" class=\"headerlink\" title=\"6. 分析\"></a>6. 分析</h1><p><strong>本地起服务走start.js, 编译走build.js。</strong><br><strong>​</strong></p>\n<h2 id=\"6-1-base-config-js\"><a href=\"#6-1-base-config-js\" class=\"headerlink\" title=\"6.1 base.config.js\"></a>6.1 base.config.js</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 基本配置</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">\t<span class=\"attr\">output</span>: &#123;&#125;, </span><br><span class=\"line\">  <span class=\"attr\">module</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">resolve</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-1-1-output\"><a href=\"#6-1-1-output\" class=\"headerlink\" title=\"6.1.1. output\"></a>6.1.1. output</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 配置webpack如何输出、以及在哪里输出你的「bundle、asset 和其他你所打包或使用 webpack 载入的任何内容」。</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">\t<span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>: path.resolve(<span class=\"string\">&#x27;.&#x27;</span>, dist_root, _context), <span class=\"comment\">// 输出路径</span></span><br><span class=\"line\">        <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;[name].js&#x27;</span>, <span class=\"comment\">// bundle名称</span></span><br><span class=\"line\">        <span class=\"attr\">chunkFilename</span>: <span class=\"string\">&#x27;[name].js&#x27;</span>, <span class=\"comment\">// 非初始chunk文件的名称</span></span><br><span class=\"line\">        <span class=\"attr\">publicPath</span>: cfg.publicPath ? <span class=\"string\">&#x27;/&#x27;</span> + _context : <span class=\"literal\">undefined</span>, <span class=\"comment\">// 在浏览器中所引用的「此输出目录对应的公开 URL」</span></span><br><span class=\"line\">        <span class=\"attr\">environment</span>: &#123;</span><br><span class=\"line\">            <span class=\"comment\">// The environment supports arrow functions (&#x27;() =&gt; &#123; ... &#125;&#x27;).</span></span><br><span class=\"line\">            <span class=\"attr\">arrowFunction</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"comment\">// The environment supports BigInt as literal (123n).</span></span><br><span class=\"line\">            <span class=\"attr\">bigIntLiteral</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"comment\">// The environment supports const and let for variable declarations.</span></span><br><span class=\"line\">            <span class=\"attr\">const</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"comment\">// The environment supports destructuring (&#x27;&#123; a, b &#125; = obj&#x27;).</span></span><br><span class=\"line\">            <span class=\"attr\">destructuring</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"comment\">// The environment supports an async import() function to import EcmaScript modules.</span></span><br><span class=\"line\">            <span class=\"attr\">dynamicImport</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"comment\">// The environment supports &#x27;for of&#x27; iteration (&#x27;for (const x of array) &#123; ... &#125;&#x27;).</span></span><br><span class=\"line\">            <span class=\"attr\">forOf</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"comment\">// The environment supports ECMAScript Module syntax to import ECMAScript modules (import ... from &#x27;...&#x27;).</span></span><br><span class=\"line\">            <span class=\"attr\">module</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-1-2-module\"><a href=\"#6-1-2-module\" class=\"headerlink\" title=\"6.1.2. module\"></a>6.1.2. module</h3><ol>\n<li>使用相对应的loader对js/less/css/图片/图标字体/svg等做处理编译</li>\n</ol>\n<h3 id=\"6-1-3-resolve\"><a href=\"#6-1-3-resolve\" class=\"headerlink\" title=\"6.1.3. resolve\"></a>6.1.3. resolve</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">\t<span class=\"attr\">resolve</span>: &#123;</span><br><span class=\"line\">    \t\t<span class=\"comment\">// 尝试按顺序解析这些后缀名。如果有多个文件有相同的名字，但后缀名不同，webpack 会解析列在数组首位的后缀的文件 并跳过其余的后缀。</span></span><br><span class=\"line\">        <span class=\"attr\">extensions</span>: [</span><br><span class=\"line\">            <span class=\"string\">&quot;.jsx&quot;</span>, <span class=\"string\">&quot;.js&quot;</span>, <span class=\"string\">&quot;.less&quot;</span>, <span class=\"string\">&quot;.css&quot;</span>, <span class=\"string\">&quot;.json&quot;</span></span><br><span class=\"line\">        ],</span><br><span class=\"line\">    </span><br><span class=\"line\">    \t\t<span class=\"comment\">// 别名配置</span></span><br><span class=\"line\">        <span class=\"attr\">alias</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;ucf-apps&#x27;</span>: path.resolve(<span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;ucf-apps/&#x27;</span>),</span><br><span class=\"line\">            <span class=\"string\">&#x27;ucf-common&#x27;</span>: path.resolve(<span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;ucf-common/src/&#x27;</span>),</span><br><span class=\"line\">            <span class=\"attr\">components</span>: path.resolve(<span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;ucf-common/src/components/&#x27;</span>),</span><br><span class=\"line\">            <span class=\"attr\">static</span>: path.resolve(<span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;ucf-common/src/static/&#x27;</span>),</span><br><span class=\"line\">            <span class=\"attr\">utils</span>: path.resolve(<span class=\"string\">&#x27;.&#x27;</span>, <span class=\"string\">&#x27;ucf-common/src/utils/&#x27;</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">   &#125;,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-1-4-plugins\"><a href=\"#6-1-4-plugins\" class=\"headerlink\" title=\"6.1.4. plugins\"></a>6.1.4. plugins</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">    <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.BannerPlugin(&#123;</span><br><span class=\"line\">            <span class=\"attr\">banner</span>: <span class=\"string\">`File:[file] Date:<span class=\"subst\">$&#123;<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()&#125;</span>`</span></span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">        <span class=\"keyword\">new</span> MiniCssExtractPlugin(&#123;</span><br><span class=\"line\">            <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;[name].css&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">chunkFilename</span>: <span class=\"string\">&#x27;[name].css&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">ignoreOrder</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.ProgressPlugin()</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-2-start-js\"><a href=\"#6-2-start-js\" class=\"headerlink\" title=\"6.2 start.js\"></a>6.2 start.js</h2><ol>\n<li>本地起服务的时候，调用server方法，并传入{port, ip}</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getPort = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;get-port&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> ip = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;ip&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 设置默认端口</span></span><br><span class=\"line\">        <span class=\"comment\">// 检测是否被占用，更换端口，启动调试服务</span></span><br><span class=\"line\">        getPort(&#123;</span><br><span class=\"line\">            <span class=\"attr\">port</span>: commands.port || <span class=\"number\">3000</span></span><br><span class=\"line\">        &#125;).then(<span class=\"function\"><span class=\"params\">port</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 启动服务</span></span><br><span class=\"line\">            server(&#123;</span><br><span class=\"line\">                port,</span><br><span class=\"line\">                <span class=\"attr\">ip</span>: ip.address()</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>server方法定义如下</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> webpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./start.config&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> compiler = webpack(webpackConfig);</span><br><span class=\"line\"></span><br><span class=\"line\">server = <span class=\"function\"><span class=\"params\">opt</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 使用webpack-dev-middleware生成一个和webpack的compiler绑定的中间件</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> instance = devMiddleware(compiler, &#123;</span><br><span class=\"line\">        <span class=\"attr\">publicPath</span>: webpackConfig.output.publicPath,</span><br><span class=\"line\">        <span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;Access-Control-Allow-Origin&#x27;</span>: <span class=\"string\">&#x27;*&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;Ucf-Server&#x27;</span>: util.getPkg().version</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">stats</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">colors</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            <span class=\"attr\">hash</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">children</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">chunks</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">// 静态资源托管</span></span><br><span class=\"line\">    cfg.static &amp;&amp; app.use((cfg.context == <span class=\"string\">&#x27;&#x27;</span> || cfg.context == <span class=\"literal\">undefined</span>) ? <span class=\"string\">&#x27;&#x27;</span> : <span class=\"string\">`/<span class=\"subst\">$&#123;cfg.context&#125;</span>`</span>, express.static(path.resolve(<span class=\"string\">&quot;.&quot;</span>, cfg.static)));</span><br><span class=\"line\">    <span class=\"comment\">// 加载实例</span></span><br><span class=\"line\">    app.use(instance);</span><br><span class=\"line\">    <span class=\"comment\">// 热更新</span></span><br><span class=\"line\">    app.use(hotMiddleware(compiler));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 加载代理插件</span></span><br><span class=\"line\">    <span class=\"comment\">// 处理proxy数组情况</span></span><br><span class=\"line\">    cfg.proxy &amp;&amp; cfg.proxy.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">element</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (element.enable) &#123;<span class=\"comment\">// 代理开启</span></span><br><span class=\"line\">            <span class=\"comment\">// 默认配置项</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> proxyOpt = &#123;</span><br><span class=\"line\">                <span class=\"attr\">target</span>: element.url,</span><br><span class=\"line\">                <span class=\"attr\">logLevel</span>: <span class=\"string\">&quot;debug&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                <span class=\"attr\">pathRewrite</span>: <span class=\"built_in\">Object</span>.assign(&#123;&#125;, element.pathRewrite),</span><br><span class=\"line\">                <span class=\"attr\">headers</span>: (<span class=\"keyword\">typeof</span> element.headers !== <span class=\"string\">&#x27;undefined&#x27;</span> ? element.headers : &#123;&#125;),</span><br><span class=\"line\">                <span class=\"attr\">onProxyRes</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">proxyRes</span>) </span>&#123;</span><br><span class=\"line\">                    proxyRes.headers[<span class=\"string\">&quot;Ucf-Proxy&quot;</span>] = <span class=\"string\">&quot;success&quot;</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            app.use(element.router, createProxyMiddleware(element.opts || proxyOpt));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">// 运行调试服务</span></span><br><span class=\"line\">    app.listen(opt.port, host, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log();</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(chalk.green(<span class=\"string\">`----------------------------------------------------`</span>));</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(chalk.yellow(<span class=\"string\">`\\t 🚀 UCF Develop Server`</span>));</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(chalk.green(<span class=\"string\">`\\t [Server Version]: 🏅 <span class=\"subst\">$&#123;util.getPkg().version&#125;</span>`</span>));</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(chalk.green(<span class=\"string\">`\\t [Local]         : 🏠 http://<span class=\"subst\">$&#123;browserHost&#125;</span>:<span class=\"subst\">$&#123;opt.port&#125;</span>`</span>));</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(chalk.green(<span class=\"string\">`\\t [Lan]           : 📡 http://<span class=\"subst\">$&#123;opt.ip&#125;</span>:<span class=\"subst\">$&#123;opt.port&#125;</span>`</span>));</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(chalk.green(<span class=\"string\">`----------------------------------------------------`</span>));</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-3-start-config-js\"><a href=\"#6-3-start-config-js\" class=\"headerlink\" title=\"6.3 start.config.js\"></a>6.3 start.config.js</h2><ol>\n<li>大致的配置，会与base.config.js合并。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> base = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./base.config&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">//默认的配置用于merge操作</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">    <span class=\"attr\">devtool</span>: <span class=\"string\">&#x27;source-map&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;development&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">externals</span>: cfg.externals, <span class=\"comment\">// 构建排除指定包</span></span><br><span class=\"line\">    <span class=\"attr\">resolve</span>: &#123; </span><br><span class=\"line\">        <span class=\"attr\">alias</span>: cfg.alias <span class=\"comment\">// 别名配置</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">rules</span>: cfg.loader <span class=\"comment\">// loader配置</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.HotModuleReplacementPlugin(), <span class=\"comment\">// 热更新Plugin</span></span><br><span class=\"line\">        ...HtmlPlugin <span class=\"comment\">// 查看第2点</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//入口</span></span><br><span class=\"line\">config.entry = entries;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//环境变量注入</span></span><br><span class=\"line\">cfg.global_env &amp;&amp; (config.plugins = config.plugins.concat(<span class=\"keyword\">new</span> webpack.DefinePlugin(cfg.global_env)));</span><br><span class=\"line\"><span class=\"comment\">//传入插件设置</span></span><br><span class=\"line\">cfg.devPlugins &amp;&amp; (config.plugins = config.plugins.concat(cfg.devPlugins));</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = merge(base, config);</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>HtmlPlugin的相关配置</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> HtmlPlugin = [];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 判断是否加载默认页面打开浏览器</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (commands.homepage) &#123;</span><br><span class=\"line\">    HtmlPlugin.push(<span class=\"keyword\">new</span> OpenBrowserPlugin(&#123;</span><br><span class=\"line\">        <span class=\"attr\">url</span>: <span class=\"string\">`http://<span class=\"subst\">$&#123;browserHost&#125;</span>:<span class=\"subst\">$&#123;commands.port || <span class=\"number\">3000</span>&#125;</span>/<span class=\"subst\">$&#123;commands.homepage || <span class=\"string\">&#x27;&#x27;</span>&#125;</span>`</span></span><br><span class=\"line\">    &#125;));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//加载本地开发环境的Portal</span></span><br><span class=\"line\">glob.sync(<span class=\"string\">&#x27;./ucf-common/src/portal/src/app.js&#x27;</span>).forEach(<span class=\"function\"><span class=\"params\">_path</span> =&gt;</span> &#123;</span><br><span class=\"line\">    entries[<span class=\"string\">&#x27;index&#x27;</span>] = <span class=\"string\">&#x27;./ucf-common/src/portal/src/app.js&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> htmlConf = &#123;</span><br><span class=\"line\">        <span class=\"attr\">filename</span>: <span class=\"string\">`index.html`</span>,</span><br><span class=\"line\">        <span class=\"attr\">template</span>: <span class=\"string\">&#x27;./ucf-common/src/portal/src/index.html&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">inject</span>: <span class=\"string\">&#x27;body&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">chunks</span>: [<span class=\"string\">&#x27;index&#x27;</span>],</span><br><span class=\"line\">        <span class=\"attr\">hash</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    HtmlPlugin.push(<span class=\"keyword\">new</span> HtmlWebPackPlugin(htmlConf));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//构造模块加载入口以及html出口</span></span><br><span class=\"line\">bootFiles.forEach(<span class=\"function\"><span class=\"params\">_path</span> =&gt;</span> &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  \t<span class=\"comment\">// 获取上下文</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> _context = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!cfg.publicPath &amp;&amp; cfg.context) &#123;</span><br><span class=\"line\">        _context = <span class=\"string\">`<span class=\"subst\">$&#123;cfg.context&#125;</span>/`</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//模块名</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"built_in\">module</span> = _path.split(<span class=\"string\">`./<span class=\"subst\">$&#123;scan_root&#125;</span>/`</span>)[<span class=\"number\">1</span>].split(<span class=\"string\">`/src/<span class=\"subst\">$&#123;bootName&#125;</span>`</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> chunk = <span class=\"string\">`<span class=\"subst\">$&#123;_context&#125;</span><span class=\"subst\">$&#123;<span class=\"built_in\">module</span>&#125;</span>/index`</span>; <span class=\"comment\">// 拼接结果&#x27;iuap-mdm-ucf/association/index&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> targetDir = _path.split(<span class=\"string\">`/<span class=\"subst\">$&#123;bootName&#125;</span>`</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 兼容其他类型的模版配置，如：ejs</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> templateType = cfg.templateType ? cfg.templateType : <span class=\"string\">&#x27;html&#x27;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">const</span> htmlConf = <span class=\"built_in\">Object</span>.assign(&#123;</span><br><span class=\"line\">        <span class=\"attr\">filename</span>: <span class=\"string\">`<span class=\"subst\">$&#123;chunk&#125;</span>.html`</span>,</span><br><span class=\"line\">        <span class=\"attr\">template</span>: <span class=\"string\">`<span class=\"subst\">$&#123;targetDir&#125;</span>/index.<span class=\"subst\">$&#123;templateType&#125;</span>`</span>,</span><br><span class=\"line\">        <span class=\"attr\">inject</span>: <span class=\"string\">&#x27;body&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">chunks</span>: [chunk],</span><br><span class=\"line\">        <span class=\"attr\">hash</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">static_url</span>: cfg.static_url ? cfg.static_url : <span class=\"string\">&#x27;&#x27;</span> </span><br><span class=\"line\">    &#125;,HtmlPluginConf);</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//处理启动器逻辑</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (bootList &amp;&amp; <span class=\"keyword\">typeof</span> bootList == <span class=\"string\">&#x27;boolean&#x27;</span>) &#123;</span><br><span class=\"line\">        entries[chunk] = [_path, <span class=\"built_in\">require</span>.resolve(<span class=\"string\">&#x27;./webpack-hot-middleware/client&#x27;</span>)];</span><br><span class=\"line\">        HtmlPlugin.push(<span class=\"keyword\">new</span> HtmlWebPackPlugin(htmlConf));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">Array</span>.isArray(bootList) &amp;&amp; bootList.length &gt; <span class=\"number\">0</span>) &#123; <span class=\"comment\">// 多入口</span></span><br><span class=\"line\">        bootList.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">            _bootList.add(item);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_bootList.has(<span class=\"built_in\">module</span>)) &#123;</span><br><span class=\"line\">            entries[chunk] = [_path, <span class=\"built_in\">require</span>.resolve(<span class=\"string\">&#x27;./webpack-hot-middleware/client&#x27;</span>)];</span><br><span class=\"line\">            HtmlPlugin.push(<span class=\"keyword\">new</span> HtmlWebPackPlugin(htmlConf));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 统一前端三方包接入TNS</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (tnsEnabled) &#123;</span><br><span class=\"line\">    HtmlPlugin.push(<span class=\"keyword\">new</span> TNSClientPlugin(&#123;<span class=\"attr\">libraryDebug</span>: <span class=\"literal\">true</span>, ...tnsDetailCfg&#125;));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-4-build-js\"><a href=\"#6-4-build-js\" class=\"headerlink\" title=\"6.4 build.js\"></a>6.4 build.js</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> webpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./build.config&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> compiler = webpack(webpackConfig);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//启动构建</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    <span class=\"attr\">plugin</span>: <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 调用build方法</span></span><br><span class=\"line\">build = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log();</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(chalk.green(<span class=\"string\">`--------------------------------------------`</span>));</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(chalk.yellow(<span class=\"string\">`\\t 🚀  UCF Build Server`</span>));</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(chalk.green(<span class=\"string\">`\\t [Build Version] : 🏅 <span class=\"subst\">$&#123;util.getPkg().version&#125;</span>`</span>));</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log();</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(chalk.green(<span class=\"string\">`\\t 💪 Good Luck Please Wait ☃️`</span>));</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(chalk.green(<span class=\"string\">`--------------------------------------------`</span>));</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log();</span><br><span class=\"line\">    compiler.run(<span class=\"function\">(<span class=\"params\">err, stats</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!err) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;\\n&#x27;</span> + stats.toString(&#123;</span><br><span class=\"line\">                <span class=\"attr\">hash</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">                <span class=\"attr\">chunks</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">                <span class=\"attr\">children</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">                <span class=\"attr\">colors</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">            &#125;));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(chalk.red(err));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-5-build-config-js\"><a href=\"#6-5-build-config-js\" class=\"headerlink\" title=\"6.5. build.config.js\"></a>6.5. build.config.js</h2><ol>\n<li>大致的配置，会与base.config.js</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">    output,</span><br><span class=\"line\">    <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;production&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">devtool</span>: <span class=\"string\">&#x27;cheap-module-source-map&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">externals</span>: cfg.externals,</span><br><span class=\"line\">    <span class=\"attr\">resolve</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">alias</span>: cfg.alias</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">rules</span>: cfg.loader</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">optimization</span>: &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 不使用内部压缩参数关闭</span></span><br><span class=\"line\">        <span class=\"attr\">minimize</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">        <span class=\"keyword\">new</span> CleanWebpackPlugin(),</span><br><span class=\"line\">        <span class=\"keyword\">new</span> OptimizeCSSAssetsPlugin(&#123;</span><br><span class=\"line\">            <span class=\"attr\">cssProcessorOptions</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">safe</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                <span class=\"attr\">mergeLonghand</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">                <span class=\"attr\">discardComments</span>: &#123; <span class=\"attr\">removeAll</span>: <span class=\"literal\">true</span> &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">canPrint</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">        <span class=\"keyword\">new</span> TerserPlugin(&#123;</span><br><span class=\"line\">            <span class=\"comment\">// test: /\\.js(\\?.*)?$/i,</span></span><br><span class=\"line\">            <span class=\"comment\">// cache: true,</span></span><br><span class=\"line\">            <span class=\"attr\">parallel</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            <span class=\"comment\">// sourceMap: cfg.open_source_map == undefined ? true : cfg.open_source_map</span></span><br><span class=\"line\">            <span class=\"comment\">// include:&#x27;vendor&#x27;,</span></span><br><span class=\"line\">            <span class=\"comment\">// exclude:&#x27;vendor&#x27;,</span></span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">        ...HtmlPlugin <span class=\"comment\">// 查看2点</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 入口</span></span><br><span class=\"line\">config.entry = entries;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 环境变量注入</span></span><br><span class=\"line\">cfg.global_env &amp;&amp; (config.plugins = config.plugins.concat(<span class=\"keyword\">new</span> webpack.DefinePlugin(cfg.global_env)));</span><br><span class=\"line\"><span class=\"comment\">// 传入插件设置</span></span><br><span class=\"line\">cfg.buildPlugins &amp;&amp; (config.plugins = config.plugins.concat(cfg.buildPlugins));</span><br><span class=\"line\"><span class=\"comment\">// 是否启用优化资源单独生成文件</span></span><br><span class=\"line\">cfg.res_extra &amp;&amp; (cfg.splitChunks ? config.optimization[<span class=\"string\">&#x27;splitChunks&#x27;</span>] = cfg.splitChunks : config.optimization[<span class=\"string\">&#x27;splitChunks&#x27;</span>] = splitChunks);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = merge(base, config);</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>HtmlPlugin</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> HtmlPlugin = [];</span><br><span class=\"line\"></span><br><span class=\"line\">bootFiles.forEach(<span class=\"function\"><span class=\"params\">_path</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//模块名</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"built_in\">module</span> = _path.split(<span class=\"string\">`./<span class=\"subst\">$&#123;scan_root&#125;</span>/`</span>)[<span class=\"number\">1</span>].split(<span class=\"string\">`/src/<span class=\"subst\">$&#123;bootName&#125;</span>`</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> chunk = <span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"built_in\">module</span>&#125;</span>/index`</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">const</span> targetDir = _path.split(<span class=\"string\">`/<span class=\"subst\">$&#123;bootName&#125;</span>`</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"comment\">// 兼容其他类型的模版配置，如：ejs</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> templateType = cfg.templateType ? cfg.templateType : <span class=\"string\">&#x27;html&#x27;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">const</span> htmlConf = <span class=\"built_in\">Object</span>.assign(&#123;</span><br><span class=\"line\">        <span class=\"attr\">filename</span>: <span class=\"string\">`<span class=\"subst\">$&#123;chunk&#125;</span>.html`</span>,</span><br><span class=\"line\">        <span class=\"attr\">template</span>: <span class=\"string\">`<span class=\"subst\">$&#123;targetDir&#125;</span>/index.<span class=\"subst\">$&#123;templateType&#125;</span>`</span>,</span><br><span class=\"line\">        <span class=\"attr\">inject</span>: <span class=\"string\">&#x27;body&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">chunks</span>: [<span class=\"string\">&#x27;vendor&#x27;</span>, chunk],</span><br><span class=\"line\">        <span class=\"attr\">hash</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">static_url</span>: cfg.static_url ? cfg.static_url : <span class=\"string\">&#x27;&#x27;</span> </span><br><span class=\"line\">        &#125;,HtmlPluginConf) ;</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"comment\">//处理启动器逻辑</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (bootList &amp;&amp; <span class=\"keyword\">typeof</span> bootList == <span class=\"string\">&#x27;boolean&#x27;</span>) &#123;</span><br><span class=\"line\">        entries[chunk] = _path;</span><br><span class=\"line\">        HtmlPlugin.push(<span class=\"keyword\">new</span> HtmlWebPackPlugin(htmlConf));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">Array</span>.isArray(bootList) &amp;&amp; bootList.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        bootList.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">            _bootList.add(item);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_bootList.has(<span class=\"built_in\">module</span>)) &#123;</span><br><span class=\"line\">            entries[chunk] = _path;</span><br><span class=\"line\">            HtmlPlugin.push(<span class=\"keyword\">new</span> HtmlWebPackPlugin(htmlConf));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (tnsEnabled) &#123;</span><br><span class=\"line\">    HtmlPlugin.push(<span class=\"keyword\">new</span> TNSClientPlugin(&#123;excludeModules&#125;));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>其他配置</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// output输出的文件添加hash值实现缓存</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> output = cfg.hasHash ? &#123;</span><br><span class=\"line\">    ...base.output,</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;[name].[hash].js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">chunkFilename</span>: <span class=\"string\">&#x27;[name].[hash].js&#x27;</span>,</span><br><span class=\"line\">&#125; : base.output;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// splitChunks进行代码分离，避免加载重复代码</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> splitChunks = &#123;</span><br><span class=\"line\">    <span class=\"attr\">cacheGroups</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">default</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">minChunks</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">            <span class=\"attr\">priority</span>: -<span class=\"number\">20</span>,</span><br><span class=\"line\">            <span class=\"attr\">reuseExistingChunk</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"comment\">//打包重复出现的代码</span></span><br><span class=\"line\">        <span class=\"attr\">vendor</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">chunks</span>: <span class=\"string\">&#x27;initial&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">minChunks</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">            <span class=\"attr\">maxInitialRequests</span>: <span class=\"number\">5</span>, <span class=\"comment\">// The default limit is too small to showcase the effect</span></span><br><span class=\"line\">            <span class=\"attr\">minSize</span>: <span class=\"number\">0</span>, <span class=\"comment\">// This is example is too small to create commons chunks</span></span><br><span class=\"line\">            <span class=\"attr\">name</span>: <span class=\"string\">&#x27;vendor&#x27;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"comment\">//打包第三方类库</span></span><br><span class=\"line\">        <span class=\"attr\">commons</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">name</span>: <span class=\"string\">&#x27;vendor&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">chunks</span>: <span class=\"string\">&#x27;initial&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">minChunks</span>: <span class=\"literal\">Infinity</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-6-start-config-js与build-config-js差异\"><a href=\"#6-6-start-config-js与build-config-js差异\" class=\"headerlink\" title=\"6.6 start.config.js与build.config.js差异\"></a>6.6 start.config.js与build.config.js差异</h2><h3 id=\"6-6-1-start-config-js\"><a href=\"#6-6-1-start-config-js\" class=\"headerlink\" title=\"6.6.1. start.config.js\"></a>6.6.1. start.config.js</h3><ul>\n<li>使用HotModuleReplacementPlugin热更新模块</li>\n<li>使用open-browser-plugin本地起服务时自动打开指定页面</li>\n</ul>\n<h3 id=\"6-6-2-build-cofig-js\"><a href=\"#6-6-2-build-cofig-js\" class=\"headerlink\" title=\"6.6.2. build.cofig.js\"></a>6.6.2. build.cofig.js</h3><ul>\n<li>使用CleanWebpackPlugin在每一次构建前清除指定目录文件 </li>\n<li>使用OptimizeCSSAssetsPlugin压缩CSS代码 </li>\n<li>使用TerserWebpackPlugin压缩JS代码</li>\n</ul>\n<h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h3>"}],"PostAsset":[{"_id":"source/_posts/读ucf-scripts脚手架源码/1.png","slug":"1.png","post":"ckyifyj7v0000ve1mfyg97i5n","modified":0,"renderable":0},{"_id":"source/_posts/读ucf-scripts脚手架源码/2.png","slug":"2.png","post":"ckyifyj7v0000ve1mfyg97i5n","modified":0,"renderable":0},{"_id":"source/_posts/读ucf-scripts脚手架源码/3.png","slug":"3.png","post":"ckyifyj7v0000ve1mfyg97i5n","modified":0,"renderable":0},{"_id":"source/_posts/读ucf-scripts脚手架源码/4.png","slug":"4.png","post":"ckyifyj7v0000ve1mfyg97i5n","modified":0,"renderable":0}],"PostCategory":[{"post_id":"ckyifyj7v0000ve1mfyg97i5n","category_id":"ckyinnc3u0002zb1m9ve5d2t6","_id":"ckyinnc3v0003zb1m0iv2byzk"}],"PostTag":[{"post_id":"ckyifyj7v0000ve1mfyg97i5n","tag_id":"ckyinmusi0000zb1m5b1aagvs","_id":"ckyinmusk0001zb1mbmsg5jxm"}],"Tag":[{"name":"test","_id":"ckyhb5rty0000nu1m9ll6gg6h"},{"name":"Testing","_id":"ckyhb5wym0002nu1m4awofb9f"},{"name":"Webpack","_id":"ckyinmusi0000zb1m5b1aagvs"}]}}